IDENTIFICATION DIVISION.
PROGRAM-ID. CHECKIN.
AUTHOR. ANDERSON.
COPY "ASDC.OWNER".
*******************************************************************
* PURPOSE:
*    CHECKIN APPLIES CHANGES TO THE JCS BASE.
* OPTIONS:
*
*
*
* MAINTENANCE PERFORMED:
* PERSON 	DATE			ACTIONS
*
*
*
*
******************************************************************

ENVIRONMENT DIVISION.
CONFIGURATION SECTION.

INPUT-OUTPUT SECTION.
FILE-CONTROL.
****
* COPY "FILENAME.SL".
****
SELECT OUTPRINT ASSIGN TO OUTPRINTFILE
	RESERVE 1 AREA ORGANIZATION SEQUENTIAL
	ACCESS SEQUENTIAL.

DATA DIVISION.
FILE SECTION.
****
* COPY "FILENAME.FD".
****
FD OUTPRINT
   BLOCK CONTAINS 8192 CHARACTERS
   RECORDING MODE IS DATA-SENSITIVE.
01 PLINE.
	05 PLINE-MARK   PIC X.
	05 PLINE-VER	PIC 9999.
	05 PLINE-ACTION	PIC X.
	05 PLINE-LINE	PIC 9(6).
	05  PLINE2DATA.
		10 FILLER    	PIC X(243).
	05  PLINE-HIGH REDEFINES PLINE2DATA.
		10 PLINE-COMMAND PIC X(10).
		10 PLINE-HIGH-VER PIC 9999.
		10 PLINE-EOL	PIC X(229).
WORKING-STORAGE SECTION.
77  EXISTS-SW			PIC X.
	88  EXISTS		VALUE '1'.
77  HIGHLINE			PIC 9(9) COMP.
77  GOT-ONE-SW			PIC X.
	88  GOT-ONE		VALUE '1'.
77  HIGHLEVEL			PIC 9(4).
77  NEWLEVEL			PIC 9(4).
77  OUTPRINTFILE		PIC X(32).
01  HOLDBUFF.
	05   FILLER		PIC X(256).
01  QUESTIONTABLE.
	05  LEVELLOOK OCCURS 60 INDEXED BY LLNDX.
		10  LEVACT	PIC X.
01  UDABUFFER.
	05  UDAFILE		PIC X(32).
	05  UDAWHO		PIC X(256).
01  WRITEUDA			PIC S9(9) COMP VALUE 2.


01  WORKBUFF1.
    03  03WORKBUFF1.
	05  WORKBUFF11		PIC X.
	05  FILLER		PIC X(255).
    03  03RWORKBUFF1 REDEFINES 03WORKBUFF1.
	05  WORKBUFF1-MARK	PIC X.
	05  WORKBUFF1-VER	PIC 9999.
	05  WORKBUFF1-ACTION	PIC X.
	05  WORKBUFF1-LINE	PIC 999999.
	05  WORKBUFF1-DATA	PIC X(244).
01  RECLN1			PIC S9(9) COMP.
01  READFLAG1			PIC S9(9) COMP.
01  READOFFSET1			PIC S9(9) COMP.
01  SAVEBYTES1			PIC S9(9) COMP.
01  SAVEBYTES2			PIC S9(9) COMP.
01  I				PIC S9(9) COMP.
01  J				PIC S9(9) COMP.
01  BYTESREAD1 			PIC S9(9) COMP.
01  WORKBUFF2.
    03  03WORKBUFF2.
	05  WORKBUFF21		PIC X.
	05  FILLER		PIC X(2

    03  03RWORKBUFF2 REDEFINES 03WORKBUFF2.
	05  WORKBUFF2-MARK	PIC X.
	05  WORKBUFF2-VER	PIC 9999.
	05  WORKBUFF2-ACTION	PIC X.
	05  WORKBUFF2-LINE	PIC 999999.
	05  WORKBUFF2-DATA	PIC X(244).
01  RECLN2			PIC S9(9) COMP.
01  READFLAG2			PIC S9(9) COMP.
01  READOFFSET2			PIC S9(9) COMP.
01  BYTESREAD2 			PIC S9(9) COMP.
01  RETURNVAR			PIC S9(9) COMP.

01  GETME-WS.
	05  GMES		PIC S9(4) COMP VALUE ZERO.
	05  GCMD		PIC S9(4) COMP VALUE 1.
	05  GCNT		PIC S9(4) COMP VALUE 2.
	05  GARG		PIC S9(4) COMP VALUE 3.
	05  GTSW		PIC S9(4) COMP VALUE 4.
	05  GSWS		PIC S9(4) COMP VALUE 5.
01  NO-ARG			PIC 9(9) COMP VALUE 228.
01  G-ARGUMENT-NO	PIC S9(4) COMP VALUE ZERO.
01  G-SWITCH		PIC X(32) VALUE SPACES.
01  G-BUFFER		PIC X(200) VALUE SPACES.
01  G-ERRWRD		PIC S9(9) COMP VALUE ZERO.
01  G-AC0		PIC S9(9) COMP VALUE ZERO.
01  G-AC1		PIC S9(9) COMP VALUE ZERO.
01  INFILE1		PIC X(200).
01  INFILE2		PIC X(200).
01  EOF1-SW		PIC X.
	88  EOF1	VALUE '1'.
01  SECOND-EOF1-SW	PIC X.
	88  SECOND-EOF1	VALUE '1'.
01  EOF2-SW		PIC X.
	88  EOF2	VALUE '1'.
01  SECOND-EOF2-SW	PIC X.
	88  SECOND-EOF2	VALUE '1'.
01  ERRWRD		PIC S9(9) COMP.
01  CLINEFEEDS1		PIC S9(9) COMP.
01  CFORMFEEDS1		PIC S9(9) COMP.
01  CLINEFEEDS2		PIC S9(9) COMP.
01  LINECNT		PIC S9(9) COMP.
01  CLINEFEEDS		PIC S9(9) COMP.
01  CFORMFEEDS2		PIC S9(9) COMP.
01  FILLER.
	05  FORMF	PIC S99 COMP VALUE 12.
	05  FORMFEEDER REDEFINES FORMF PIC X.
01  ERRMSG.
	05  FILLER	PIC X(5).
		88  NO-ERROR VALUE '     '.
	05  FILLER	PIC X(75).
PROCEDURE DIVISION.
0010-CONTROL.
* CALL 'GET' USING REQUEST G-AC0 G-AC1 G-ARGUMENT-NO G-SWITCH
*                    G-BUFFER G-ERRWRD
	MOVE ZERO TO LINECNT.
	MOVE 'L' TO G-SWITCH.
	MOVE 0 TO G-ARGUMENT-NO.
	CALL 'GET' USING GTSW G-AC0 G-AC1 G-ARGUMENT-NO G-SWITCH
			   G-BUFFER G-ERRWRD.
	IF G-ERRWRD  = NO-ARG
		THEN
		     DISPLAY 'X PROGRAM/L=FILE0 FILE1 FILE2'
		     STOP RUN
	ELSE
	IF G-ERRWRD NOT = ZERO
		     PERFORM 9999-ERROR.
	IF G-AC0 NOT > 0 THEN
		MOVE '@CONSOLE' TO OUTPRINTFILE
	ELSE 	MOVE SPACES TO OUTPRINTFILE
		MOVE G-BUFFER TO 

		STRING G-BUFFER DELIMITED BY LOW-VALUE
 		INTO OUTPRINTFILE.
	EXPUNGE OUTPRINT.
	OPEN OUTPUT OUTPRINT.
	MOVE 1 TO G-ARGUMENT-NO.
	CALL 'GET' USING GARG G-AC0 G-AC1 G-ARGUMENT-NO G-SWITCH
			   G-BUFFER G-ERRWRD.
	IF G-ERRWRD  = NO-ARG
		THEN
		     DISPLAY 'X PROGRAM/L=FILE0 FILE1 FILE2'
		     STOP RUN
	ELSE
	IF G-ERRWRD NOT = ZERO
		     PERFORM 9999-ERROR.
	MOVE SPACES TO INFILE1.
	STRING G-BUFFER DELIMITED BY LOW-VALUE INTO INFILE1.
	ADD 1 TO G-ARGUMENT-NO.
	CALL 'GET' USING GARG G-AC0 G-AC1 G-ARGUMENT-NO G-SWITCH
			   G-BUFFER G-ERRWRD.
	IF G-ERRWRD  = NO-ARG
		THEN
		     DISPLAY 'X PROGRAM/L=FILE0 FILE1 FILE2'
		     STOP RUN
	ELSE
	IF G-ERRWRD NOT = ZERO
		     PERFORM 9999-ERROR.
	MOVE SPACES TO INFILE2.
	STRING G-BUFFER DELIMITED BY LOW-VALUE INTO INFILE2.
 	CALL 'OPN1' USING INFILE1 ERRMSG.
	IF NO-ERROR THEN
		NEXT SENTENCE
	ELSE DISPLAY INFILE1
	     DISPLAY ERRMSG
	     STOP RUN.
 	CALL 'OPN2' USING INFILE2 ERR

	IF NO-ERROR THEN
		NEXT SENTENCE
	ELSE DISPLAY INFILE2
	     DISPLAY ERRMSG
	     STOP RUN.
	MOVE ZERO TO READFLAG1 READFLAG2 READOFFSET1 READOFFSET2.
	MOVE ZERO TO CLINEFEEDS1 CLINEFEEDS CLINEFEEDS2.
	MOVE ZERO TO SAVEBYTES1 SAVEBYTES2.
	MOVE ' ' TO EOF1-SW EOF2-SW SECOND-EOF1-SW SECOND-EOF2-SW.
	PERFORM REALREAD2.
	PERFORM REALREAD1.
	MOVE WORKBUFF1 TO PLINE.
	IF PLINE-COMMAND = 'HIGHLEVEL' THEN
		MOVE PLINE-HIGH-VER TO HIGHLEVEL
		COMPUTE NEWLEVEL = HIGHLEVEL + 1
		MOVE NEWLEVEL TO PLINE-HIGH-VER
		ADD RECLN1 TO SAVEBYTES1
		WRITE PLINE
		PERFORM REALREAD1
	ELSE DISPLAY 'FILE1 IS NOT A VALID JCS FILE!!'
	     STOP RUN.
	IF WORKBUFF2-ACTION NOT = 'S' THEN
		DISPLAY 'WORK FILE IS INVALID!'
		STOP RUN.
	PERFORM 0020-DO-PROGRAM  THRU 0020-EXIT UNTIL EOF1 AND EOF2.
 	CALL 'CLS1' USING INFILE1 ERRMSG
	CLOSE OUTPRINT.
	MOVE SPACES TO UDAWHO.
	CALL 'RWUDA' USING WRITEUDA UDABUFFER ERRWRD.
 	CALL 'CLS2' USING INFILE2 ERRMSG.
	STOP RUN.
0010-EXIT. EXIT.

0020-DO-PROGRAM.
	PERFORM READHIGHLEV
 		UNTIL LINECNT = WORKBUFF2-LINE OR EOF1.
	MOVE NEWLEVEL TO WORKBUFF2-VER.
	MOVE WORKBUFF2 TO

	MOVE WORKBUFF2-LINE TO HIGHLINE.
	PERFORM REALREAD2.
	IF EOF2 THEN
		NEXT SENTENCE
	ELSE
		IF WORKBUFF2-ACTION = 'D' THEN
			WRITE PLINE FROM HOLDBUFF
			WRITE PLINE FROM WORKBUFF1
		ELSE WRITE PLINE FROM WORKBUFF1
	     	     WRITE PLINE FROM HOLDBUFF.
	PERFORM REALREAD1.
	PERFORM READ2 UNTIL WORKBUFF2-ACTION = 'M' OR EOF2.
	PERFORM READHIGHLEV  UNTIL LINECNT  = HIGHLINE OR EOF1.
	IF NOT EOF2
		MOVE NEWLEVEL TO WORKBUFF2-VER
		WRITE PLINE FROM WORKBUFF2
		PERFORM READ2.
	PERFORM WRITE2 UNTIL WORKBUFF2-ACTION = 'E' OR EOF2.
	IF NOT EOF2
		MOVE NEWLEVEL TO WORKBUFF2-VER
		WRITE PLINE FROM WORKBUFF2.
	PERFORM REALREAD2 UNTIL WORKBUFF2-ACTION = 'S' OR EOF2.
	IF EOF2 THEN MOVE 999999 TO WORKBUFF2-LINE.
0020-EXIT. EXIT.

WRITE2.
	MOVE NEWLEVEL TO WORKBUFF2-VER.
	MOVE ' ' TO WORKBUFF2-ACTION.
	WRITE PLINE FROM WORKBUFF2.
	PERFORM REALREAD2.
READHIGHLEV.
	MOVE ' ' TO EXISTS-SW.
	IF WORKBUFF1-ACTION = 'S' OR 'M' OR 'E' THEN
		IF WORKBUFF1-VER > 0 AND < 61 THEN
			SET LLNDX TO WORKBUFF1-VER
		ELSE DISPLAY 'JCS FILE IS CORRUPTED!!'
		     STOP RUN
		END-IF
		IF WORKBUFF1-ACTION = 'S' THEN
			MOVE 'D' TO LEVACT (LLNDX)
		ELSE
		IF WORKBUFF1-ACTION = 'M' THEN
			MOVE 'A' TO LEVACT (LLNDX)
		ELSE
		MOVE WORKBUFF1-ACTION TO LEVACT (LLNDX)
	ELSE
****
*DID THIS LINE EXIST AT THIS LEVEL
****
		MOVE HIGHLEVEL TO I
		IF LEVACT (I) = 'A' THEN
***HE WAS ADDED AT THE HIGHEST LEVEL SO HE EXISTS
			MOVE '1' TO EXISTS-SW
		ELSE
		IF LEVACT (I) = 'D' THEN
			NEXT SENTENCE
***.. WAS HE DELETED AT A LOWER
		ELSE COMPUTE J = HIGHLEVEL - 1
		     PERFORM 0020-EXIT VARYING I FROM J BY -1
			   UNTIL I < 2 OR LEVACT (I) = 'A' OR
				LEVACT (I) = 'D'
		     IF LEVACT (I) = 'D' THEN
***HE WAS DELETED AT A LOWER LEVEL ..HE DOESN'T EXIST
			NEXT SENTENCE
		     ELSE
*** HE IS THERE AND NOBODY BOTHERED HIM
		     IF LEVACT (I) = 'A' THEN
			MOVE '1' TO EXISTS-SW.
	IF EXISTS THEN
		ADD 1 TO LINECNT.
	IF LINECNT = WORKBUFF2-LINE
		NEXT SENTENCE
	ELSE
		WRITE PLINE FROM WORKBUFF1
		PERFORM READ1.

READ2.
	IF WORKBUFF2-LINE > HIGHLINE THEN
	     MOVE WORKBUFF2-LINE TO HIGHLINE.
	     PERFORM REALREAD2.

REALREAD1.
	MOVE ' ' TO GOT-ONE-SW.
	PERFORM READ1 UNTIL GOT-ONE OR EOF1.

READ1.
*******
* IT IS POSSIBLE TO HAVE EOF AND DATA RETURNED; THEREFORE, IF IT'S
* A REAL EOF THEN IT'S TIME TO STOP, ELSE DELAY SETTING EOF BY 1
* BECAUSE I HAVE A BUFFER TO PROCESS.
*******
        IF NOT SECOND-EOF1 THEN
		MOVE 255 TO RECLN1
		CALL 'REA1' USING WORKBUFF1 RECLN1 READFLAG1
 			READOFFSET1 ERRWRD
		IF ERRWRD = 24
			THEN MOVE '1' TO SECOND-EOF1-SW
		END-IF
		IF RECLN1 = 0  THEN
			MOVE '1' TO EOF1-SW
		ELSE ADD RECLN1 TO BYTESREAD1
		     	ADD 1 TO CLINEFEEDS1
		     IF WORKBUFF11 = FORMFEEDER THEN
			ADD 1 TO CFORMFEEDS1
		     ELSE NEXT SENTENCE
		     END-IF
		     MOVE '1' TO GOT-ONE-SW
	ELSE MOVE '1' TO EOF1-SW.

REALREAD2.
*******
* IT IS POSSIBLE TO HAVE EOF AND DATA RETURNED; THEREFORE, IF IT'S
* A REAL EOF THEN IT'S TIME TO STOP, ELSE DELAY SETTING EOF BY 1
* BECAUSE I HAVE A BUFFER TO PROCESS.
*******
        IF NOT SECOND-EOF2 THEN
		MOVE 255 TO RECLN2
		CALL 'REA2' USING WORKBUFF2 RECLN2 READFLAG2
 			READOFFSET2 ERRWRD
		IF ERRWRD = 24
			THEN MOVE '1' TO SECOND-EOF2-SW
		END-IF
		IF RECLN2 = 0  THEN
			MOVE '1' TO EOF2-SW
		ELSE ADD RECLN2 TO BYTESREAD2
		     ADD 1 TO CLINEFEEDS2
		     IF WORKBUFF21 = FORMFEEDER THEN
			ADD 1 TO CFORMFEEDS2
		     ELSE NEXT SENTENCE
	ELSE MOVE '1' TO EOF2-SW.

9999-ERROR.
	CALL 'IRTN' USING ERRWRD.
9999-EXIT. EXIT.
