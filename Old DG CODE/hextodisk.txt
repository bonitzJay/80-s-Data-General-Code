IDENTIFICATION DIVISION.
PROGRAM-ID.  HEXTODISK.
***********************************************************************
* HEX UTILITY PROGRAM
*  FORMS A UNIQUE FILENAME AND HEXES ITS ARUMENT TO THAT FILE
***********************************************************************
ENVIRONMENT DIVISION.
INPUT-OUTPUT SECTION.
FILE-CONTROL.
	SELECT OUT-FILE ASSIGN TO OUTFILENAME.
DATA DIVISION.
FILE SECTION.
FD OUT-FILE
   RECORDING MODE IS DATA-SENSITIVE
   LABEL RECORDS ARE OMITTED.
01 OUT-REC.
	05  OUT-CHAR OCCURS 256 PIC X.
WORKING-STORAGE SECTION.
77  OUTFILENAME		PIC X(32).
77  RULER-POINTER 	PIC 9(4) COMP.
77  CALLED-SW		PIC X VALUE '0'.
	88  CALLED	VALUE 1.
77  C-CNT		PIC 9(4) COMP.
77  CHAR-LENGTH PIC 9999 COMP VALUE 80.
77  I PIC 9999 COMP.
77  J PIC 9999 COMP.
77  DONE-SW PIC X.
	88  DONE VALUE '1'.
77  P PIC 9999 COMP.
77  P2 PIC 9999 COMP.
77  K PIC 9999 COMP.
****************************************************************
* USE WHO.WS WITH SUBROUTINE WHO TO OBTAIN PID CONSOLE OR
* STREAM NAME AND USERNAME.
****************************************************************
01  WHO-PID		        PIC 999.
01  WHO-CON.
	05 WHO-CON1		PIC X.
	    88  RUNNING-CONSOLE	VALUE 'C' 'V'.
	    88  RUNNING-BATCH  	VALUE 'S' 'B'.
	05 FILLER PIC X(31) VALUE SPACES.
01  WHO-USER                    PIC X(32) VALUE SPACES.
01  WHO-WS.
	05  WHO-USER-ID.
		10 WHO-USER3    PIC XXX.
		10 FILLER	PIC X(6).
	05  WHO-USER-PRE        PIC X(9) VALUE SPACES.
01  NUL-LER.
	05  N-LER	PIC 99 COMP VALUE ZERO.
	05  NULER REDEFINES N-LER PIC X.
01  NEW-LER.
	05  NE-LER	PIC 99 COMP VALUE 10.
	05  NEWLER REDEFINES NE-LER PIC X.
01  COMP-CHAR PIC 9999 COMP.
01  C-COMP REDEFINES COMP-CHAR.
	05  FILLER  PIC X.
	05  COMP-PLACE PIC X.
01      GLENGTH PIC 9999 COMP.
01      GLEN    PIC 9999 COMP.
01  C-PLA.
	03  CHAR-L1.
		05  CHAR OCCURS 80 PIC X.
	03  FILLER 		   PIC X.
01  C-PL2 REDEFINES C-PLA.
	03  CCHAR OCCURS 81 PIC X.
01  HEX-L1.
	05  HL1 OCCURS 81 PIC X.
01  HEX-L2.
	05  HL2 OCCURS 81 PIC X.
01  HEX-DIGITS.
	05  HEX-C PIC X(16) VALUE '0123456789ABCDEF'.
	05  HC REDEFINES HEX-C OCCURS 16 PIC X.
01  RULER.
	05  FILLER  PIC X(60) VALUE
    '....5...10...15...20...25...30...35...40...45...50...55...60'.
	05  FILLER  PIC X(20) VALUE
    '...65...70...75...80'.
	05  FILLER PIC 99 COMP VALUE ZERO.
01  PLINE PIC X(80).
01  GKEY  PIC X(255).
01  CPID		PIC 9(9) COMP.
01  CPRNAME.
	05 GPR OCCURS 256 PIC X.
01  CERROR		PIC 9(9) COMP.
******************************************
******************************************
77  RULERBUILDER		PIC 99999.
01  DISR.
	05  DIS-RULER		PIC ZZZZZ.
	05  DIS-RULERX REDEFINES DIS-RULER PIC X(5).
77  EOF-SW PIC X.
	88  EOF VALUE '1'.
	88  ACTIVE VALUE '2'.
LINKAGE SECTION.
01  IN-REC		PIC X(255).
01  IN-L		PIC 9(4) COMP.
PROCEDURE DIVISION USING IN-L IN-REC.
*
	IF CALLED
		THEN NEXT SENTENCE
	ELSE
	     CALL "WHO" USING WHO-PID WHO-CON WHO-USER
	     MOVE WHO-PID TO CPID
	     UNSTRING WHO-USER DELIMITED BY "." OR " "
	 	INTO WHO-USER-PRE WHO-USER-ID
	     IF WHO-USER3 = SPACES THEN
		MOVE WHO-USER-PRE TO WHO-USER3
		INSPECT WHO-USER3 REPLACING ALL ' ' BY 'Z'
	     END-IF
	     CALL 'GPRNM' USING CPID CPRNAME CERROR
	     PERFORM NOTHINGEXIT VARYING I FROM 256 BY -1 UNTIL
		GPR (I) = ':' OR I < 3
	     IF GPR (I) = ':'
		ADD 1 TO I
		UNSTRING CPRNAME DELIMITED BY LOW-VALUE INTO
		  CPRNAME WITH POINTER I
	     ELSE MOVE ' ' TO CPRNAME
	     END-IF
	     MOVE SPACE TO OUTFILENAME
	     STRING '?.CBL.' DELIMITED BY SIZE
		   CPRNAME DELIMITED BY SPACE
		   '.' DELIMITED BY SIZE
		   WHO-PID DELIMITED BY SIZE
		   '.' DELIMITED BY SIZE
		   WHO-USER3 DELIMITED BY SIZE
		   '.TMP' DELIMITED BY SIZE INTO OUTFILENAME
	     EXPUNGE OUT-FILE
	     OPEN OUTPUT OUT-FILE
	     MOVE '1' TO CALLED-SW.
	MOVE  IN-L TO   GLENGTH
	MOVE IN-REC TO GKEY.
	PERFORM 05-BEGIN-HEX THRU 05-EXIT
	EXIT PROGRAM.
*******************************************
NOTHINGEXIT.
	EXIT.
05-BEGIN-HEX.
	MOVE 1 TO P P2.
	MOVE ' ' TO DONE-SW.
	MOVE ZERO TO RULERBUILDER.
	IF GLENGTH = ZERO
	    THEN MOVE '1' TO DONE-SW
	    ELSE IF GLENGTH < 80
		    THEN MOVE GLENGTH TO CHAR-LENGTH
		    ELSE MOVE 80 TO CHAR-LENGTH.
	PERFORM 10-UNSTRING THRU 10-EXIT UNTIL DONE.
05-EXIT. EXIT.
10-UNSTRING.
	MOVE 1 TO RULER-POINTER.
	PERFORM 15-BUILD-RULER 16 TIMES.
	MOVE SPACES TO CHAR-L1.
	MOVE ZERO TO C-CNT.
	UNSTRING GKEY INTO CHAR-L1 COUNT IN C-CNT WITH POINTER P.
	MOVE LOW-VALUE TO CCHAR (C-CNT + 1).
	PERFORM 90-HEXER.
	COMPUTE P = CHAR-LENGTH + P2.
	MOVE P TO P2.
	COMPUTE GLENGTH = GLENGTH - CHAR-LENGTH.
	IF GLENGTH = ZERO
	    THEN MOVE '1' TO DONE-SW
	    ELSE IF GLENGTH < 80
		    THEN MOVE GLENGTH TO CHAR-LENGTH
		    ELSE MOVE 80 TO CHAR-LENGTH.
10-EXIT. EXIT.

15-BUILD-RULER.
	ADD 5 TO RULERBUILDER.
	MOVE RULERBUILDER TO DIS-RULER.
	INSPECT DIS-RULERX REPLACING LEADING ' ' BY '.'.
	STRING DIS-RULERX    DELIMITED BY SIZE INTO RULER WITH
		POINTER RULER-POINTER.

90-HEXER.
	MOVE SPACES TO HEX-L1 HEX-L2.
	MOVE ZERO TO COMP-PLACE.
	PERFORM 99-HEXIT VARYING I FROM 1 BY 1 UNTIL I > CHAR-LENGTH.
	MOVE NULER TO HL1 (CHAR-LENGTH + 1) HL2 (CHAR-LENGTH + 1)
	STRING CR DELIMITED BY SIZE INTO OUT-REC.
	WRITE OUT-REC.
	STRING  CHAR-L1 DELIMITED BY LOW-VALUE
		CR    DELIMITED BY SIZE INTO OUT-REC.
	WRITE OUT-REC.
	MOVE   RULER TO OUT-REC.
	MOVE NEWLER TO OUT-CHAR (CHAR-LENGTH + 1).
	WRITE OUT-REC.
	STRING HEX-L1 DELIMITED BY LOW-VALUE
		CR    DELIMITED BY SIZE INTO OUT-REC.
	WRITE OUT-REC.
	STRING HEX-L2 DELIMITED BY LOW-VALUE
		CR    DELIMITED BY SIZE INTO OUT-REC.
	WRITE OUT-REC.
99-HEXIT.
	MOVE CHAR (I) TO COMP-PLACE.
	DIVIDE 16 INTO COMP-CHAR GIVING J REMAINDER K.
	ADD 1 TO J K.
	MOVE HC (J) TO HL1 (I).
	MOVE HC (K) TO HL2 (I).
	IF COMP-CHAR < 32 OR COMP-CHAR > 126
		THEN MOVE ' ' TO CHAR (I).

*THE END
