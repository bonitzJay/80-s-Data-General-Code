IDENTIFICATION DIVISION.
PROGRAM-ID.  WATCH.
AUTHOR. ANDERSON.
***************************************************************
* ANDERSON ..... WATCH ALL TERMINALS SUPPLIED ON THE COMMAND
*		 LINE FOR INACTIVITY.
***************************************************************
ENVIRONMENT DIVISION.
CONFIGURATION SECTION.
   SPECIAL-NAMES.
	"@LPT" IS ALIST.
INPUT-OUTPUT SECTION.
FILE-CONTROL.
DATA DIVISION.
FILE SECTION.
WORKING-STORAGE SECTION.
77  TERMPID		PIC S9(9) COMP.
77  J			PIC 9(4) COMP.
01  PRO-USER.
	05 PROBYTE OCCURS 32 PIC X.
77  PRO-NAME		PIC X(32).
77  SONPID		PIC S9(9) COMP.
77  PID 		PIC S9(9) COMP.
77  PROCESSNAME		PIC X(32).
77  SHOWNAME		PIC X(32).
77  ERRWRD		PIC S9(9) COMP.
77  CONSOLEPORT		PIC X(30).
77  RINGSTATUS		PIC S9(9) COMP.
77  RINGBYTE		PIC X.
77  FILE-STATUS 	PIC XX.
77  ATTENTIONCHAR	PIC 99 COMP VALUE 29.
01  CPOINT		PIC 9.
01  CON-NUMX		PIC XXX.
01  CON-NUM.
	05  CON-NUM9	PIC ZZZ.
	05  FILLER REDEFINES CON-NUM9.
		10  CNUM OCCURS 3 PIC X.
01  DOMONSW.
	05  DO-MON-SW	PIC X.
	88  DO-MON	VALUE '1'.

77  CUM-CPU		PIC S9(9) COMP.
77  SONFOUND-SW		PIC X.
	88  SONFOUND	VALUE '1'.
77  WDELAY		PIC 9(9) COMP VALUE  600.
77  CPU			PIC S9(9) COMP.
01  LOGSW EXTERNAL.
	05  LOG-SW	PIC 9(9) COMP.
01  WARNING1.
	05  FILLER	PIC X(20) VALUE
	'<15>Inactivity Warning.'.
	05  FILLER			PIC X VALUE ' '.
	05  STAMP1-YY			PIC Z9.
	05  FILLER			PIC X VALUE '/'.
	05  STAMP1-MM			PIC 99.
	05  FILLER			PIC X VALUE '/'.
	05  STAMP1-DD			PIC 99.
	05  FILLER			PIC X VALUE ' '.
	05  STAMP1-HR			PIC Z9.
	05  FILLER			PIC X VALUE ':'.
	05  STAMP1-MIN			PIC 99.
	05  FILLER			PIC X VALUE ':'.
	05  STAMP1-SEC			PIC 99.
	05  FILLER	PIC X(43) VALUE LOW-VALUES.
01  LASTWARN.
	05  FILLER	PIC X(41) VALUE
	'<15>Inactivity Termination'.
	05  FILLER	PIC 99 COMP VALUE 7.
	05  FILLER			PIC X VALUE ' '.
	05  STAMP3-YY			PIC Z9.
	05  FILLER			PIC X VALUE '/'.
	05  STAMP3-MM			PIC 99.
	05  FILLER			PIC X VALUE '/'.
	05  STAMP3-DD			PIC 99.
	05  FILLER			PIC X VALUE ' '.
	05  STAMP3-HR			PIC Z9.
	05  FILLER			PIC X VALUE ':'.
	05  STAMP3-MIN  			PIC 99.
	05  FILLER			PIC X VALUE ':'.
	05  STAMP3-SEC			PIC 99.
	05  FILLER			PIC 99 COMP VALUE 7.
	05  FILLER	PIC X(26) VALUE LOW-VALUES.
01  WARNING2.
	05  FILLER	PIC X(45) VALUE
    '<15>Inactivity Warning..you will be terminated!'.
	05  FILLER			PIC X VALUE ' '.
	05  STAMP2-YY			PIC Z9.
	05  FILLER			PIC X VALUE '/'.
	05  STAMP2-MM			PIC 99.
	05  FILLER			PIC X VALUE '/'.
	05  STAMP2-DD			PIC 99.
	05  FILLER			PIC X VALUE ' '.
	05  STAMP2-HR			PIC Z9.
	05  FILLER			PIC X VALUE ':'.
	05  STAMP2-MIN			PIC 99.
	05  FILLER			PIC X VALUE ':'.
	05  STAMP2-SEC			PIC 99.
	05  FILLER			PIC 99 COMP VALUE 7.
	05  FILLER	PIC X(17) VALUE LOW-VALUE.
01  ARGERROR.
	05  FILLER                      PIC X(80).
01  SHOWDATE.
	05  SHOW-YY			PIC Z9.
	05  FILLER			PIC X VALUE '/'.
	05  SHOW-MM			PIC 99.
	05  FILLER			PIC X VALUE '/'.
	05  SHOW-DD			PIC 99.
01  SHOWTIME.
	05  SHOW-HR			PIC Z9.
	05  FILLER			PIC X VALUE ':'.
	05  SHOW-MIN			PIC 99.
	05  FILLER			PIC X VALUE ':'.
	05  SHOW-SEC			PIC 99.
01  DATE-TODAY.
    05  YY				PIC 99.
    05  MM				PIC 99.
    05  DD				PIC 99.
01  DATE-TODAY-RDF REDEFINES DATE-TODAY PIC 9(6).

01  MM-DD-YY.
    05  MM				PIC 99.
    05  DD				PIC 99.
    05  YY				PIC 99.
01  MM-DD-YY-R REDEFINES MM-DD-YY 	PIC 9(6).

01  SYSTEM-TIME.
    05  SYS-HR				PIC 99.
    05  SYS-MIN				PIC 99.
    05  SYS-SEC				PIC 99.
01  SYSTEM-TIME-RDF REDEFINES SYSTEM-TIME PIC 9(6).
01  MDY			PIC 9(3)V9999 VALUE 100.0001.
01  YMD			PIC 9(5)V99 VALUE 10000.01.
01  SAFETY-CNT		PIC 9(4) COMP.
01  CHARPOS		PIC 9(4) COMP.
01  WKSTRING.
	05 WKSTRINGBYTE OCCURS 200 PIC X.
01  WKSTRING2		PIC X(100).
01  WKSTRING3		PIC X(100).
01  FLAGSDELIM		PIC X(5).
01  TREEMAP.
	05  TREEMAPBYTE PIC X OCCURS 256.
01  EXECMAP.
	05  EXECBYTE PIC X OCCURS 256 INDEXED BY EXECNDX.
01  STACKER OCCURS 20.
	05  CURPOINT	PIC 9(4) COMP.
	05  CURTREE	PIC X(256).
01  STACKMAX		PIC 9(4) COMP VALUE 20.
01  STACKP		PIC 9(4) COMP.
01  GLEN		PIC 999.
01  ATCON.
	05 FILLER	PIC X(8) VALUE '@CONSOLE'.
	05 FILLER	PIC X(24) VALUE LOW-VALUES.
01  CON-SOLE 		PIC X(32).
01  I			PIC 9(4) COMP.
01  EOF-SW		PIC X.
	88 EOF		VALUE '1'.
01  CINR2		PIC X(256).
01  CC.
	05 NEWL1  	PIC 99 COMP VALUE 10.
	05  NEWL REDEFINES NEWL1 PIC X.
	05 CRR1		PIC 99 COMP VALUE 13.
	05 CRR REDEFINES CRR1 PIC X.
01  GETME-WS.
	05  GMES		PIC S9(4) COMP VALUE ZERO.
	05  GCMD		PIC S9(4) COMP VALUE 1.
	05  GCNT		PIC S9(4) COMP VALUE 2.
	05  GARG		PIC S9(4) COMP VALUE 3.
	05  GTSW		PIC S9(4) COMP VALUE 4.
	05  GSWS		PIC S9(4) COMP VALUE 5.
01  G-ARGUMENT-NO	PIC S9(4) COMP VALUE ZERO.
01  G-SWITCH		PIC X(32) VALUE SPACES.
01  G-BUFFER		PIC X(200) VALUE SPACES.
01  G-ERRWRD		PIC S9(9) COMP VALUE ZERO.
01  G-AC0		PIC S9(9) COMP VALUE ZERO.
01  G-AC1		PIC S9(9) COMP VALUE ZERO.
* CALL 'GET' USING REQUEST G-AC0 G-AC1 G-ARGUMENT-NO G-SWITCH
*                    G-BUFFER G-ERRWRD
01  GETME-ERRORS.
	05  NO-ARG		PIC S9(4) COMP VALUE 228.
01  HOLDPORT			PIC X(9).
01  CONNECTREC1			PIC X(79).
01  CONNECTREC2.
	05  FILLER		PIC X(9).
	05  CONNECTEDTO		PIC X(9).
01  PORT-TABLE.
   03  PORT-ENTRY.
		10  MVPORT	PIC X(09) OCCURS 200.
01  INFO-TABLE OCCURS 200 INDEXED BY INDX.
	05  MYPORT		PIC 999.
	05  WATCHED-SW		PIC X.
	05  TREEPID		PIC S9(9) COMP.
	05  OLDUSER		PIC X(32).
	05  LOGGED-SW		PIC X.
	05  OLDCPU		PIC S9(9) COMP.
	05  INACT-CNT		PIC S9(9) COMP.
01  NDX				PIC 9(4) COMP.
01 SENDPID			PIC S9(9) COMP.
01  MAXPID        		PIC 9(4) COMP VALUE 256.
01  INFOTABLELIMIT		PIC 9(4) COMP VALUE 200.
01  TOVALUE			PIC S9(9) COMP VALUE 30.
01  TIMED-OUT			PIC XX VALUE '30'.
01  FIRSTWRN-CNT		PIC 9(4) COMP.
01  SECONDWRN-CNT		PIC 9(4) COMP.
01  LASTWRN-CNT			PIC 9(4) COMP.

01  A				PIC 9(4) COMP.
01  N				PIC 9(4) COMP.
01  TOKEN.
         05 TOKENX         PIC X(32).
         05 TOKENY REDEFINES TOKENX OCCURS 32 PIC X.
	 05 TOKENZ REDEFINES TOKENX.
		10 CONTESTER PIC X(3).
			88  THIS-IS-A-CON VALUE 'CON'.
		10 FILLER    PIC X(29).
01  DIGITWS.
	05 ADIGITX	PIC X.
		88  ADIGIT	VALUE "0" THRU "9".
	05 ADIGIT9 REDEFINES ADIGITX PIC S99 COMP.
01  ASCIIZERO			PIC S99 COMP VALUE 48.
01  NUM				PIC 9(10).
01  IPC1.
	05  IPC1LEN		PIC 9(4) COMP VALUE 12.
	05  SENDMESS		PIC X(12).

PROCEDURE DIVISION.
	IF '<000>' NOT = LOW-VALUES
		DISPLAY 'COMPILE WITH /OCTAL'
		STOP RUN.
*TURN ON SUPER PROCESS AND SYSTEM MANAGER PRIVILEDGE
*ALLOWS ME TO DO TERMS AND SEND MESSAGES PAST NMR
	CALL 'SMPRV' USING ERRWRD.
	IF ERRWRD = ZERO THEN
		NEXT SENTENCE
	ELSE CALL 'IRTN' USING ERRWRD.
	CALL 'SUPRO'.
	PERFORM INITINFOTABLE VARYING INDX FROM 1 BY 1 UNTIL
		INDX > INFOTABLELIMIT.
	MOVE SPACES TO PORT-TABLE.
	MOVE ' ' TO DO-MON-SW.
	MOVE ZERO TO I.
********************************************************************
* GET ALLOWS ME TO GET MY CONFIGURATION DATA OFF OF THE COMMAND LINE.
*
********************************************************************
	MOVE 1 TO G-ARGUMENT-NO.
 	CALL 'GET' USING GARG G-AC0 G-AC1 G-ARGUMENT-NO G-SWITCH
                     G-BUFFER G-ERRWRD.
	IF G-ERRWRD = NO-ARG
	    THEN MOVE 'ARG1=TIMEOUT,ARG2=INACTIVITY COUNT,ARGSN=CONS'
		     TO ARGERROR
		     PERFORM 1060-ERROR.
	IF G-AC1 > 0 AND G-AC1 < 1801
		THEN COMPUTE WDELAY = G-AC1 * 1000
	ELSE MOVE    'INVALID TIME OUT ARGUMENT 0<ARG2<1801.' TO
	      ARGERROR
	     PERFORM 1060-ERROR.
	MOVE 2 TO G-ARGUMENT-NO.
 	CALL 'GET' USING GARG G-AC0 G-AC1 G-ARGUMENT-NO G-SWITCH
                     G-BUFFER G-ERRWRD.
	IF G-ERRWRD = NO-ARG
	    THEN MOVE 'ARG1=TIMEOUT,ARG2=INACTIVITY COUNT,ARGSN=CONS'
		     TO ARGERROR
		     PERFORM 1060-ERROR.
	IF G-AC1 > 0 AND G-AC1 < 6
		THEN MOVE G-AC1 TO FIRSTWRN-CNT
		     COMPUTE SECONDWRN-CNT = G-AC1 * 2
		     COMPUTE LASTWRN-CNT = SECONDWRN-CNT + 1
	ELSE MOVE    'INVALID COUNT ARGUMENT 0<ARG3<6' TO ARGERROR
	     PERFORM 1060-ERROR.
	MOVE 3 TO G-ARGUMENT-NO.
 	CALL 'GET' USING GARG G-AC0 G-AC1 G-ARGUMENT-NO G-SWITCH
                     G-BUFFER G-ERRWRD.
	IF G-ERRWRD = NO-ARG
		THEN NEXT SENTENCE
	ELSE PERFORM 0100-LOAD-WATCH-TABLE UNTIL G-ERRWRD = NO-ARG
	     PERFORM 1020-INIT-DIRECT-TAB VARYING NDX FROM 1 BY
			1 UNTIL NDX > I.
	PERFORM 07-LOOP THRU 07-EXIT UNTIL 1 = 2.
	STOP RUN.
07-LOOP.
	PERFORM 0010-CHECK-MV.

	CALL 'WAIT' USING WDELAY.
07-EXIT. EXIT.

INITINFOTABLE.
	MOVE SPACE TO OLDUSER (INDX) LOGGED-SW (INDX) WATCHED-SW (INDX).
	MOVE ZERO TO OLDCPU (INDX) INACT-CNT (INDX).
SET-LOGGED-SW.
	MOVE ' ' TO LOGGED-SW (INDX).
0010-CHECK-MV.
	MOVE 3 TO PID.
	CALL 'GPROCN' USING PID PROCESSNAME ERRWRD.
	IF ERRWRD = ZERO THEN
 		MOVE SPACES TO SHOWNAME
		UNSTRING PROCESSNAME DELIMITED BY ':' OR LOW-VALUES
			INTO PRO-USER PRO-NAME
		IF PRO-USER = 'OP' AND PRO-NAME = 'EXEC' THEN
			CALL 'TREE' USING PID CPU EXECMAP ERRWRD
			IF ERRWRD = ZERO
			PERFORM 0012-GET-PROCN VARYING
				EXECNDX FROM 1 BY 1 UNTIL
				EXECNDX > MAXPID
			ELSE MOVE 'EXEC TREE FAILED' TO ARGERROR
			     PERFORM 1060-ERROR
		ELSE MOVE    'EXEC IS NOT PID 3 !' TO ARGERROR
		     PERFORM 1060-ERROR.
0012-GET-PROCN.
	IF EXECBYTE (EXECNDX) = 'X' THEN
		SET PID TO EXECNDX
		SUBTRACT 1 FROM PID
		CALL 'GPROCN' USING PID PROCESSNAME ERRWRD
		IF ERRWRD = ZERO THEN
			MOVE SPACES TO SHOWNAME
			UNSTRING PROCESSNAME DELIMITED
			BY ':' OR LOW-VALUES
			INTO PRO-USER PRO-NAME
*DO NOT BOTHER OP NO MATTER WHERE HE IS
			IF PROBYTE (1) = 'O' AND PROBYTE (2) = 'P'
				NEXT SENTENCE
			ELSE
*I'M USING THE CON NUMBER TO DIRECTLY INDEX THE INDX TABLE FOR SPEED.
			MOVE PRO-NAME TO TOKEN
			IF THIS-IS-A-CON THEN
			   PERFORM 1040-NUMBER
			   IF (NUM > INFOTABLELIMIT) OR (NUM < 1)
				THEN NEXT SENTENCE
			   ELSE
*GOOD.. I'M WATCHING THIS ONE
			   IF WATCHED-SW (NUM) = '1'
				THEN SET INDX TO NUM
				     PERFORM 0017-WATCH-ONE.
0017-WATCH-ONE.
	IF PRO-USER NOT = OLDUSER (INDX)
		MOVE PRO-USER TO OLDUSER (INDX)
		MOVE ZERO TO OLDCPU (INDX).
	MOVE '1' TO LOGGED-SW (INDX).
	MOVE PID TO TREEPID (INDX).
	MOVE ZERO TO CUM-CPU.
	CALL 'TREE' USING PID CPU TREEMAP ERRWRD.
	IF ERRWRD = ZERO
		ADD CPU TO CUM-CPU
		MOVE 1 TO STACKP
		MOVE 1 TO CURPOINT (STACKP)
		MOVE TREEMAP TO CURTREE (STACKP)
		PERFORM TRAVERSETREE UNTIL STACKP = 0
		IF CUM-CPU = OLDCPU (INDX) THEN
			ADD 1 TO INACT-CNT (INDX)
 			PERFORM DO-INACTS
		ELSE MOVE ZERO TO INACT-CNT (INDX)
      		     MOVE CUM-CP

DO-INACTS.
	ACCEPT SYSTEM-TIME FROM TIME.
	MOVE SYS-HR TO SHOW-HR STAMP1-HR STAMP2-HR STAMP3-HR.
	MOVE SYS-MIN TO SHOW-MIN STAMP1-MIN STAMP2-MIN STAMP3-MIN.
	MOVE SYS-SEC TO SHOW-SEC STAMP1-SEC STAMP2-SEC STAMP3-SEC.
	ACCEPT DATE-TODAY  FROM DATE.
	MOVE MM OF DATE-TODAY TO SHOW-MM STAMP1-MM STAMP2-MM STAMP3-MM.
	MOVE DD OF DATE-TODAY TO SHOW-DD STAMP1-DD STAMP2-DD STAMP3-DD.
	MOVE YY OF DATE-TODAY TO SHOW-YY STAMP1-YY STAMP2-YY STAMP3-YY.
	MOVE TREEPID (INDX) TO SENDPID.
	IF INACT-CNT (INDX) = FIRSTWRN-CNT
		DISPLAY SHOWDATE ' ' SHOWTIME ' CON' MYPORT (INDX) ' '
		   TREEPID (INDX) ' ' OLDUSER (INDX)
		        ' FIRST WARNING. '
			UPON ALIST
		CALL 'SNDD' USING SENDPID WARNING1
	ELSE
	IF INACT-CNT (INDX) = SECONDWRN-CNT
		CALL 'SNDD' USING SENDPID WARNING2
		DISPLAY SHOWDATE ' ' SHOWTIME ' CON' MYPORT (INDX) ' '
		   TREEPID (INDX) ' ' OLDUSER (INDX)
		        ' SECOND WARNING. '
			UPON ALIST
	ELSE
	IF INACT-CNT (INDX) = LASTWRN-CNT
	     CALL 'SNDD' USING SENDPID LASTWARN
	     MOVE TREEPID (INDX) TO TERMPID
	     CALL "TERM" USING TERMPID ERRWRD
	      DISPLAY  ERRWRD ' ' SHOWDATE ' '
			SHOWTIME ' CON' MYPORT (INDX) ' '
		   	TREEPID (INDX) ' ' OLDUSER (INDX)
		      ' **TERMINATED* '
			UPON ALIST
	     MOVE ZERO TO INACT-CNT (INDX)
	     MOVE SPACES TO OLDUSER (INDX).

TRAVERSETREE.
	MOVE ' ' TO SONFOUND-SW.
	PERFORM FINDSON VARYING I FROM CURPOINT (STACKP)
 		BY 1 UNTIL I > MAXPID OR SONFOUND.
	IF SONFOUND
		ADD 1 TO J
		MOVE J TO CURPOINT (STACKP)
		CALL 'TREE' USING SONPID CPU TREEMAP ERRWRD
		IF ERRWRD = ZERO
			ADD 1 TO STACKP
			IF STACKP > STACKMAX
				SUBTRACT 1 FROM STACKP
			ELSE
			MOVE 1 TO CURPOINT (STACKP)
			MOVE TREEMAP TO CURTREE (STACKP)
			ADD CPU TO CUM-CPU
		ELSE NEXT SENTENCE
	ELSE SUBTRACT 1 FROM STACKP
	     IF STACKP NOT = ZERO
		MOVE CURTREE (STACKP) TO TREEMAP.
FINDSON.
	IF TREEMAPBYTE (I) = 'X' THEN
		COMPUTE SONPID = I - 1
		MOVE I TO J
		MOVE '1' TO SONFOUND-SW.

0100-LOAD-WATCH-TABLE.
	ADD 1 TO I.
	IF I > INFOTABLELIMIT THEN
		MOVE  'PORT TABLE EXCEEDED-- 

		PERFORM 1060-ERROR
		MOVE NO-ARG TO G-ERRWRD
	ELSE
		UNSTRING G-BUFFER DELIMITED BY LOW-VALUE INTO MVPORT (I)
		ADD 1 TO G-ARGUMENT-NO
 		CALL 'GET' USING GARG G-AC0 G-AC1 G-ARGUMENT-NO G-SWITCH
                     G-BUFFER G-ERRWRD
		IF G-ERRWRD NOT = NO-ARG AND ZERO THEN
			MOVE 'GTMES ERROR IN 0100' TO ARGERROR
			PERFORM 1060-ERROR.
1020-INIT-DIRECT-TAB.
**THE CON NUMBER BECOMES THE DIRECT INDEX TO THIS TABLE SO AS TO
*SPEED THINGS UP A BIT.
	MOVE MVPORT (NDX) TO TOKEN.
	PERFORM 1040-NUMBER.
	IF (NUM > INFOTABLELIMIT) OR (NUM < 1)
		THEN DISPLAY TOKEN ' BAD PORT ' UPON ALIST
	ELSE
	     MOVE NUM  TO  MYPORT (NUM)
	     MOVE '1' TO WATCHED-SW (NUM).

1040-NUMBER.
	MOVE 1 TO A.
	MOVE 0 TO N.
	MOVE 0 TO NUM.
	MOVE TOKENY(A) TO ADIGITX.
	PERFORM 1050-DIGIT 6 TIMES.
1040-EXIT. EXIT.

1050-DIGIT.
	IF ADIGIT THEN
		COMPUTE NUM = (10 * NUM) + (ADIGIT9 - ASCIIZERO).
	COMPUTE N = N + 1.
	COMPUTE A = A + 1.
	MOVE TOKENY(A) TO ADIGITX.
1050-EXIT. EXIT.

1060-ERROR.
	MOVE 2 TO SENDPID.
	CALL 'SNDD' USING SENDPID ARGERROR.
	CALL 'ABORT'.
