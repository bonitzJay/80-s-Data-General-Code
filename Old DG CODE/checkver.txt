IDENTIFICATION DIVISION.
PROGRAM-ID. CHECKVER.
AUTHOR. ANDERSON.
*******************************************************************
* PURPOSE:
*  CHECK THE VERSION AS TO DATE AND TIME MODIFIED
*
* OPTIONS:
* SEE MACRO
*
*
* MAINTENANCE PERFORMED:
* PERSON 	DATE			ACTIONS
* ANDERSON     02/17/88   RETURN VERSION TO THE STRING VARIABLE
*
*
*
******************************************************************

ENVIRONMENT DIVISION.
CONFIGURATION SECTION.

INPUT-OUTPUT SECTION.
FILE-CONTROL.
****
* COPY "FILENAME.SL".
****
SELECT OUTPRINT ASSIGN TO OUTPRINTFILE
	RESERVE 1 AREA ORGANIZATION SEQUENTIAL
	ACCESS SEQUENTIAL.

DATA DIVISION.
FILE SECTION.
****
* COPY "FILENAME.FD".
****
FD OUTPRINT
   BLOCK CONTAINS 8192 CHARACTERS
   RECORDING MODE IS DATA-SENSITIVE.
01 PLINE.
	05 PLINE-MARK   PIC X.
	05 PLINE-VER	PIC 9999.
	05 PLINE-ACTION	PIC X.
	05 PLINE-LINE	PIC 9(6).
	05  PLINE2DATA.
		10 FILLER    	PIC X(243).
	05  PLINE-HIGH REDEFINES PLINE2DATA.
		10 PLINE-COMMAND PIC X(10).
		10 PLINE-HIGH-VER PIC 9999.
		10 PLINE-EOL	PIC X(229).
WORKING-STORAGE SECTION.
77  TOPOP			PIC X(200).
77  EXISTS-SW			PIC X.
	88  EXISTS		VALUE '1'.
77  HIGHLINE			PIC 9(9) COMP.
77  GOT-ONE-SW			PIC X.
	88  GOT-ONE		VALUE '1'.
77  CMPLEN			PIC S9(9) COMP.
77  MATCH-CNT			PIC S9(9) COMP.
77  HIGHLEVEL			PIC 9(4).
77  NEWLEVEL			PIC 9(4).
77  WSVER			PIC S9(9) COMP.
77  OUTPRINTFILE		PIC X(32).
01  WORKBUFF1.
    03  03WORKBUFF1.
	05  WORKBUFF11		PIC X.
	05  FILLER		PIC X(255).
    03  03RWORKBUFF1 REDEFINES 03WORKBUFF1.
	05  WORKBUFF1-MARK	PIC X.
	05  WORKBUFF1-VER	PIC 9999.
	05  WORKBUFF1-ACTION	PIC X.
	05  WORKBUFF1-LINE	PIC 999999.
	05  WORKBUFF1-DATA	PIC X(244).
01  QUESTIONTABLE.
	05  LEVELLOOK OCCURS 60 INDEXED BY LLNDX.
		10  LEVACT	PIC X.
01  RECLN1			PIC S9(9) COMP.
01  READFLAG1			PIC S9(9) COMP.
01  READOFFSET1			PIC S9(9) COMP.
01  SAVEBYTES1			PIC S9(9) COMP.
01  I				PIC S9(9) COMP.
01  J				PIC S9(9) COMP.
01  BYTESREAD1 			PIC S9(9) COMP.
01  GETME-WS.
	05  GMES		PIC S9(4) COMP VALUE ZERO.
	05  GCMD		PIC S9(4) COMP VALUE 1.

	05  GCNT		PIC S9(4) COMP VALUE 2.
	05  GARG		PIC S9(4) COMP VALUE 3.
	05  GTSW		PIC S9(4) COMP VALUE 4.
	05  GSWS		PIC S9(4) COMP VALUE 5.
01  NO-ARG			PIC 9(9) COMP VALUE 228.
01  G-ARGUMENT-NO	PIC S9(4) COMP VALUE ZERO.
01  G-SWITCH		PIC X(32) VALUE SPACES.
01  G-BUFFER		PIC X(200) VALUE SPACES.
01  G-ERRWRD		PIC S9(9) COMP VALUE ZERO.
01  G-AC0		PIC S9(9) COMP VALUE ZERO.
01  G-AC1		PIC S9(9) COMP VALUE ZERO.
01  INFILE1		PIC X(200).
01  EOF1-SW		PIC X.
	88  EOF1	VALUE '1'.
01  SECOND-EOF1-SW	PIC X.
	88  SECOND-EOF1	VALUE '1'.
01  DOHIGH-SW		PIC X.
	88  DOHIGH	VALUE '1'.
01  RUNLEVEL		PIC 9(4).
01  ERRWRD		PIC S9(9) COMP.
01  CLINEFEEDS1		PIC S9(9) COMP.
01  CFORMFEEDS1		PIC S9(9) COMP.
01  CLINEFEEDS		PIC S9(9) COMP.
01  FILLER.
	05  FORMF	PIC S99 COMP VALUE 12.
	05  FORMFEEDER REDEFINES FORMF PIC X.
01  ERRMSG.
	05  FILLER	PIC X(5).
		88  NO-ERROR VALUE '     '.
	05  FILLER	PIC X(75).
01  TSTAMP 		PIC X(51).
01  A				PIC 9(4) COMP.
01  N				PIC 9(4) COMP.
01  TOKEN.
         05 TOKENX         PIC X(32).
         05 TOKENY REDEFINES TOKENX OCCURS 32 PIC X.
01  DIGITWS.
	05 ADIGITX	PIC X.
		88  ADIGIT	VALUE "0" THRU "9".
	05 ADIGIT9 REDEFINES ADIGITX PIC S99 COMP.
01  ASCIIZERO			PIC S99 COMP VALUE 48.
01  NUM				PIC S9(10).

PROCEDURE DIVISION.
0010-CONTROL.
* CALL 'GET' USING REQUEST G-AC0 G-AC1 G-ARGUMENT-NO G-SWITCH
*                    G-BUFFER G-ERRWRD
	MOVE ' ' TO QUESTIONTABLE.
	MOVE 'V' TO G-SWITCH.
	MOVE 0 TO G-ARGUMENT-NO.
	CALL 'GET' USING GTSW G-AC0 G-AC1 G-ARGUMENT-NO G-SWITCH
			   G-BUFFER G-ERRWRD.
	IF G-ERRWRD  = NO-ARG
		THEN
		     DISPLAY 'X PROGRAM/L=FILE0 FILE1'
		     STOP RUN
	ELSE
	IF G-ERRWRD NOT = ZERO
		     PERFORM 9999-ERROR.
	IF G-AC0 NOT > 0 THEN
		MOVE '1' TO DOHIGH-SW
	ELSE 	MOVE ' ' TO DOHIGH-SW
	     IF G-AC1 = -1 THEN
		MOVE G-BUFFER TO TOKEN
		PERFORM 1040-NUMBER
		IF NUM > 0 THEN
			COMPUTE WSVER = -1 * NUM
		ELSE MOVE ZERO TO WSVER
	     ELSE
   		MOVE G-AC1 TO WSVER.
	MOVE 'L' TO G-SWITCH.
	MOVE 0 TO G-ARGUMENT-NO.
	CALL 'GET' USING GTSW G-AC0 G-AC1 G-ARGUMENT-NO G-S

			   G-BUFFER G-ERRWRD.
	IF G-ERRWRD  = NO-ARG
		THEN
		     DISPLAY 'X PROGRAM/L=FILE0 FILE1'
		     STOP RUN
	ELSE
	IF G-ERRWRD NOT = ZERO
		     PERFORM 9999-ERROR.
	IF G-AC0 NOT > 0 THEN
		MOVE '@CONSOLE' TO OUTPRINTFILE
	ELSE 	MOVE SPACES TO OUTPRINTFILE
		STRING G-BUFFER DELIMITED BY LOW-VALUE
 		INTO OUTPRINTFILE.
	EXPUNGE OUTPRINT.
	OPEN OUTPUT OUTPRINT.
	MOVE 1 TO G-ARGUMENT-NO.
	CALL 'GET' USING GARG G-AC0 G-AC1 G-ARGUMENT-NO G-SWITCH
			   G-BUFFER G-ERRWRD.
	IF G-ERRWRD  = NO-ARG
		THEN
		     DISPLAY 'X PROGRAM/L=FILE0 FILE1 '
		     STOP RUN
	ELSE
	IF G-ERRWRD NOT = ZERO
		     PERFORM 9999-ERROR.
	MOVE SPACES TO INFILE1.
	STRING G-BUFFER DELIMITED BY LOW-VALUE INTO INFILE1.
 	CALL 'OPN1' USING INFILE1 ERRMSG.
	IF NO-ERROR THEN
		NEXT SENTENCE
	ELSE DISPLAY INFILE1
	     DISPLAY ERRMSG
	     STOP RUN.
	MOVE ZERO TO READFLAG1 READOFFSET1.
	MOVE ZERO TO CLINEFEEDS1 CLINEFEEDS.
	MOVE ZERO TO SAVEBYTES1.
	MOVE ' ' TO EOF1-SW  SECOND-EOF1-SW.
	PERFORM REALREAD1.
	MOVE WORKBUFF1 TO PLINE.
	IF PLINE-COMMAND = 'HIGHLEVEL' THEN
		MOVE PLINE-HIGH-VER TO HIGHLEVEL
		MOVE LOW-VALUES TO TOPOP
		STRING HIGHLEVEL DELIMITED BY SIZE INTO TOPOP
		DISPLAY 'CURRENT LEVEL IS ' HIGHLEVEL
		MOVE PLINE-EOL TO TSTAMP
		DISPLAY 'FILE WAS FIRST ENTERED ... ' TSTAMP
		PERFORM REALREAD1
	ELSE DISPLAY 'FILE1 IS NOT A VALID JCS FILE!!'
	     STOP RUN.
	IF DOHIGH THEN
		MOVE HIGHLEVEL TO RUNLEVEL
	ELSE
	   IF WSVER > 0 THEN
		MOVE WSVER TO RUNLEVEL
		IF RUNLEVEL > HIGHLEVEL THEN
		    DISPLAY 'THERE IS NO VERSION ' RUNLEVEL
		    STOP RUN
		ELSE NEXT SENTENCE
	   ELSE
	   IF WSVER < 0 THEN
		COMPUTE WSVER    = HIGHLEVEL + WSVER
		IF WSVER < 1 THEN
		    DISPLAY 'VERSION STARTS AT 1'
		    STOP RUN
		ELSE MOVE WSVER TO RUNLEVEL
	   ELSE DISPLAY 'ILLEGAL VERSION SPECIFIED'
		MOVE HIGHLEVEL TO RUNLEVEL.
	DISPLAY 'REQUESTED VERSION ' RUNLEVEL.
	PERFORM 0020-DO-PROGRAM  THRU 0020-EXIT UNTIL EOF1.
 	CALL 'CLS1' USING INFILE1 ERRMSG
	CLOSE OUTPRINT.
	CALL 'GOPOP' USING TOPOP.
	STOP RUN.
0010-EXIT. EXIT.

0020-DO-PROGRAM.
	IF WORKB

		IF WORKBUFF1-VER = RUNLEVEL THEN
			MOVE '1' TO EOF1-SW
			MOVE WORKBUFF1-DATA TO TSTAMP
		        DISPLAY 'VERSION '
			 RUNLEVEL ' WAS CHECKED IN ... '
				TSTAMP.
	PERFORM READ1.
0020-EXIT. EXIT.


REALREAD1.
	MOVE ' ' TO GOT-ONE-SW.
	PERFORM READ1 UNTIL GOT-ONE OR EOF1.

READ1.
*******
* IT IS POSSIBLE TO HAVE EOF AND DATA RETURNED; THEREFORE, IF IT'S
* A REAL EOF THEN IT'S TIME TO STOP, ELSE DELAY SETTING EOF BY 1
* BECAUSE I HAVE A BUFFER TO PROCESS.
*******
        IF NOT SECOND-EOF1 THEN
		MOVE 255 TO RECLN1
		CALL 'REA1' USING WORKBUFF1 RECLN1 READFLAG1
 			READOFFSET1 ERRWRD
		IF ERRWRD = 24
			THEN MOVE '1' TO SECOND-EOF1-SW
		END-IF
		IF RECLN1 = 0  THEN
			MOVE '1' TO EOF1-SW
		ELSE ADD RECLN1 TO BYTESREAD1
			IF WORKBUFF1-ACTION = ' ' OR 'A' THEN
				ADD 1 TO CLINEFEEDS
			END-IF
		     	ADD 1 TO CLINEFEEDS1
		     IF WORKBUFF11 = FORMFEEDER THEN
			ADD 1 TO CFORMFEEDS1
		     ELSE NEXT SENTENCE
		     END-IF
		     MOVE '1' TO GOT-ONE-SW
	ELSE MOVE '1' TO EOF1-SW.

1040-NUMBER.
	MOVE 2 TO A.
	MOVE 0 TO N.
	MOVE 0 TO NUM.
	MOVE TOKENY(A) TO ADIGITX.
	PERFORM 1050-DIGIT THRU 1050-EXIT UNTIL NOT ADIGIT.

1040-EXIT. EXIT.

1050-DIGIT.
	COMPUTE NUM = (10 * NUM) + (ADIGIT9 - ASCIIZERO).
	COMPUTE N = N + 1.
	COMPUTE A = A + 1.
	MOVE TOKENY(A) TO ADIGITX.
1050-EXIT. EXIT.


9999-ERROR.
	CALL 'IRTN' USING ERRWRD.
9999-EXIT. EXIT.
