IDENT &PROGRAMNAME& &AUTHOR& &FILENAME&
IDENTIFICATION DIVISION.
PROGRAM-ID. &PROGRAMNAME&.
AUTHOR. &AUTHOR&.
*******************************************************************
* PURPOSE:
*
* OPTIONS:
*
*
*
* MAINTENANCE PERFORMED:
* PERSON 	DATE			ACTIONS
*
*
*
*
******************************************************************

ENVIRONMENT DIVISION.
CONFIGURATION SECTION.

INPUT-OUTPUT SECTION.
FILE-CONTROL.
****
* COPY "FILENAME.SL".
****
COPY "&FILENAME&.SL".

DATA DIVISION.
FILE SECTION.
****
* COPY "FILENAME.FD".
****

COPY "&FILENAME&.FD".
%
^MACRO
WS1 &KEYPIC& &PROGRAMNAME& &NONKEY& &KEY-NO-IN-REC-1& &KEY-NO-IN-REC-2& &KEY-NO-IN-REC-3& &KEY-NO-IN-REC-4& &KEY-NO-IN-REC-5&
WORKING-STORAGE SECTION.
77  UPOK-SW			PIC X.
	88  UPOK 		VALUE '1'.
77  FOUND-SW			PIC X.
	88  FOUND		VALUE '1'.
77  LOCKED-SW			PIC X.
	88  LOCKED		VALUE '1'.
77  ACTION-SW			PIC XX.
	88  ADD-ACTION		VALUE ' A' ' a' 'A ' 'a '.
	88  CHANGE-ACTION	VALUE ' C' ' c' 'C ' 'c '.
	88  DELETE-ACTION	VALUE ' D' ' d' 'D ' 'd '.
	88  CA-ACTION		VALUE 'CA' 'ca'.
	88  UPDATE-ACTION	VALUE 'U' 'u' ' U' ' u'.
77  UPDATE-ALLOWED-SW		PIC X.
	88  UPDATE-ALLOWED	VALUE '1'.
77  GOOD-ANS-SW			PIC X.
	88  GOOD-ANS		VALUE '1'.

77  WS-DUMMY			PIC X.
77  WS-WAIT			PIC 9(4) COMP VALUE 2.
77  DO-LOOP-SW			PIC X.
	88  DO-LOOP		VALUE '1'.
77  FINISHED-SW			PIC X.
	88 FINISHED             VALUE '1'.
77  WS-SCREEN			PIC X(10) VALUE '&PROGRAMNAME&'.
01  MYHOLDINIT.
	05  MYRECKEY-HOLD		PIC &KEYPIC&.
01  FLD-NO-FLD.
  	05  FLD-NO			PIC 99.
		88  KEY-FIELD		VALUE &KEY-NO-IN-REC-1& &KEY-NO-IN-REC-2& &KEY-NO-IN-REC-3& &KEY-NO-IN-REC-4& &KEY-NO-IN-REC-5&.
	05  FLD-NOX REDEFINES FLD-NO    PIC XX.
01  FLD-CNT			PIC 9(4) COMP.
01  FIRST-NON-KEY-FLD		PIC 9(4) COMP VALUE &NONKEY&.
01  WORKX.
 	05 WORKDUMMY.
		10  WK-DUM1		PIC X.
		    88  FIRST-DIGIT-NUMERIC VALUE '0' THRU '9'.
		10  WK-DUM2		PIC X.
		    88  SECOND-DIGIT-NUMERIC VALUE '0' THRU '9'.
	05 WORKDUMMY9 REDEFINES WORKDUMMY PIC 99.
01  WS-MESS.
  	05  STOP-DIM		PIC 99 COMP VALUE 29.
	05  MESS			PIC X(77) VALUE SPACES.	
	05  START-DIM		PIC 99 COMP VALUE 28.
01  COB-GSID		PIC S9(4) COMP VALUE 117.
01  AC0			PIC 9(9) COMP.
01  AC1			PIC 9(9) COMP.
01  AC2			PIC 9(9) COMP.
01  SYSTEMID			PIC X(32).
%
^MACRO
WS2 &FILENAME& &RECLEN&

*****
* BEGIN WORKING STORAGE COPIES
*****

COPY 'FILESTATUS.WS'.

COPY 'FNCTNKEYS.WS'.
	88  BACKTAB		VALUE 01.
	88  GLOBAL-FUNCTION	VALUE 02 THRU 99.
   03  HIGH-FUNCTION-KEY	PIC 99 VALUE 99.
COPY 'TIMEDATE.WS'.
COPY "CBERROR32.WS".
COPY "WHO32.WS".
COPY "&FILENAME&.WS".
01  CHECKMOD1		PIC X(&RECLEN&).
01  CHECKMOD2		PIC X(&RECLEN&).
%
^MACRO
SCREEN &TITLE1&
SCREEN SECTION.
01 SCR-INITIAL.
	05  BLANK SCREEN.
01 SCR-BANNER.
	05  LINE 1 BLANK LINE COL 1 PIC X(10) FROM WS-SCREEN.
	05  LINE 1 COL 30 PIC X(30) FROM SYSTEMID.
	05  LINE 1 COL 72 PIC Z9/99/99 FROM MM-DD-YY-R.
	05  LINE 2 BLANK LINE COL 1 PIC X(3) FROM WHO-USER3.
	05  LINE 2 COL 30 "&TITLE1&".
	05  SCR-TIME.
		10  LINE 2 COL 72 PIC Z9/99/99 FROM SYSTEM-TIME-RDF.
		10  LINE 2 COL 74 ":".
		10  LINE 2 COL 77 ":".
01  SCR-MESS.
	05  LINE 24 COL 1 BLANK LINE  PIC X(79) FROM WS-MESS.
	05  SCR-DUMMY	LINE 24 COL 79 PIC X TO WS-DUMMY.
	
01  SCR-ANYCHANGE.
	05  LINE 24 COL 1 BLANK LINE
     "ENTER FIELD NUMBER,.. OR (D)ELETE,.. OR (U)PDATE,.. OR (CA) CHANGE
-    " ALL".
	05 LINE 24 COL 77 PIC XX USING WORKDUMMY.
	
01  SCR-WAIT.
	05  LINE 24
		"PLEASE WAIT....".
COPY "CBERROR32.SD".

%
^MACRO
DFLD &LINE& &COL& &PIC& &FLD&
~IF NOT MCALL ~DFLD
~SET VR0 1
01  SCR-ACCEPT.
~DFLD
	05  SCR-FLD&VR0& LINE &LINE& COL &COL& PIC &PIC& USING &FLD&.
~ADD VR0 1
%
^MACRO
DPROMPT &LINE& &COL& &P1&
~IF NOT MCALL ~DPROMPT
01  SCR-PROMPT.
	05  LINE 3 BLANK LINE.
	05  LINE 4 BLANK LINE.
	05  LINE 5 BLANK LINE.
	05  LINE 6 BLANK LINE.
	05  LINE 7 BLANK LINE.
	05  LINE 8 BLANK LINE.
	05  LINE 9 BLANK LINE.
	05  LINE 10 BLANK LINE.
	05  LINE 11 BLANK LINE.
	05  LINE 12 BLANK LINE.
	05  LINE 13 BLANK LINE.
	05  LINE 14 BLANK LINE.
	05  LINE 15 BLANK LINE.
	05  LINE 16 BLANK LINE.
	05  LINE 17 BLANK LINE.
	05  LINE 18 BLANK LINE.
	05  LINE 19 BLANK LINE.
	05  LINE 20 BLANK LINE.
	05  LINE 21 BLANK LINE.
	05  LINE 22 BLANK LINE.
	05  BLANK LINE LINE 23.
	05  BLANK LINE LINE 23 "ESC=BACKTAB, F1=FIND, F2=MOD, F3=REFRESH
-           ", F4=TOP, F5=BACK, F6=DOIT, F8=EXIT".
~DPROMPT
	05  LINE &LINE& COL &COL& "&P1&".
%
^MACRO
DECLARE &FILENAME& &SELECTORKEY& &FLDCNT&
PROCEDURE DIVISION.
DECLARATIVES.
0000-&FILENAME& SECTION.
	USE AFTER ERROR PROCEDURE ON &FILENAME&.
&FILENAME&-ERROR.
	MOVE FILE-STATUS TO ERR-STATUS.
	MOVE INFOS-STATUS TO ERR-INFOS-STATUS.
	MOVE "&FILENAME&" TO ERR-FILE-NAME.
END DECLARATIVES.
DUMMY SECTION.
0010-CONTROL.
***
*GET SYSTEM ID
***
	MOVE ZERO TO AC0 AC1.
	CALL '?CBBADDR' USING SYSTEMID AC2.
	CALL '?CBSYS' USING COB-GSID AC0 AC1 AC2 ERRWRD.
	IF ERRWRD  NOT = ZERO
		CALL 'IRTN' USING ERRWRD.
	UNSTRING SYSTEMID DELIMITED BY LOW-VALUE INTO SYSTEMID.
	COPY 'WHO.CALL'.
	COPY 'TIMEDATE.PL'.
	DISPLAY SCR-INITIAL.
	DISPLAY SCR-BANNER.
	DISPLAY SCR-PROMPT.
	DISPLAY SCR-WAIT.
*****
* OPEN ALL FILES
*****
	OPEN I-O &FILENAME&.
	IF FILE-STATUS = I-O-OK
		THEN NEXT SENTENCE
	ELSE MOVE 'OPEN' TO ERR-USER-MSG
	     PERFORM 9999-ERROR THRU 9999-EXIT.
*****
* CHOOSE SELECTOR PATH TO SUB-INDEX
*****
	READ &FILENAME& SUPPRESS DATA KEY IS &SELECTORKEY&.
	IF FILE-STATUS = I-O-OK
		THEN NEXT SENTENCE
	ELSE MOVE 'SELECTOR MISSING' TO ERR-USER-MSG
	     PERFORM 9999-ERROR THRU 9999-EXIT.
	READ &FILENAME& DOWN SUPPRESS DATA.
	IF FILE-STATUS = I-O-OK
		THEN NEXT SENTENCE
	ELSE MOVE 'SUBINDEX NOT DEFINED' TO ERR-USER-MSG
	     PERFORM 9999-ERROR THRU 9999-EXIT.
*****
* SET NUMBER OF FIELDS ON SCREEN TO BE ENTERED
* START NEW ENTRY
*****

	MOVE ALL '9' TO MYHOLDINIT.
	MOVE &FLDCNT& TO FLD-CNT.
	PERFORM 0045-START-NEW THRU 0045-EXIT.

****
***     DO THE PROGRAM LOGIC UNTIL HE SAYS TO QUIT.
**
*
	MOVE ' ' TO FINISHED-SW.
	PERFORM 0020-DO-PROGRAM THRU 0020-EXIT UNTIL FINISHED.
*
**
*** 	THAT'S ALL.. SAY GOODNIGHT
****

	DISPLAY SCR-WAIT.

****
* CLOSE ALL FILES
****
	CLOSE &FILENAME&.
	STOP RUN.
0010-EXIT. EXIT.
%
^MACRO
PROCEDURE1

0020-DO-PROGRAM.
****
* UPDATE TIME EACH LOOP
****
	ACCEPT SYSTEM-TIME FROM TIME.
	DISPLAY SCR-TIME.
	MOVE ZERO TO FKEY.
	PERFORM 0030-ACCEPT THRU 0030-EXIT
	  VARYING FLD-NO FROM FLD-NO
		BY 1 UNTIL FLD-NO > FLD-CNT OR GLOBAL-FUNCTION.
	IF HELP-KEY
		THEN NEXT SENTENCE
	ELSE MOVE ' ' TO FOUND-SW.
	IF GOOD-KEY
		THEN MOVE '1' TO LOCKED-SW
		     PERFORM 0050-UPDATE-RECORD THRU 0050-EXIT
			UNTIL NOT LOCKED
		     PERFORM 0045-START-NEW THRU 0045-EXIT
	ELSE
 	IF DOIT-KEY
		THEN SUBTRACT 1 FROM FLD-NO
 		     IF KEY-FIELD
			THEN MOVE 'CHANGE ON KEY NOT ALLOWED'
				TO MESS
			     DISPLAY SCR-MESS
			ELSE MOVE '1' TO LOCKED-SW
		     	     PERFORM 0050-UPDATE-RECORD THRU
 				0050-EXIT
				UNTIL NOT LOCKED
		     	     PERFORM 0045-START-NEW THRU 0045-EXIT
	ELSE
	IF FIND-KEY OR FNC5-KEY
		THEN PERFORM 0600-START-NEXT THRU 0600-EXIT
		     MOVE 1 TO FLD-NO
	ELSE
	IF HELP-KEY
		THEN IF FLD-NO NOT = 2 OR NOT FOUND
			THEN MOVE 'ILLOGICAL FUNCTION KEY PRESSED'
				TO MESS
			     DISPLAY SCR-MESS
			     SUBTRACT 1 FROM FLD-NO
			ELSE
			     MOVE '1' TO LOCKED-SW
			     PERFORM 0800-READ-KEYED THRU
 				0800-EXIT UNTIL NOT LOCKED
			     IF FILE-STATUS = I-O-OK
				THEN MOVE 'C' TO ACTION-SW
			     	     MOVE FIRST-NON-KEY-FLD TO FLD-NO
			     ELSE
				IF FILE-STATUS = RECORD-LOCKED
				THEN MOVE HIGH-FUNCTION-KEY TO FKEY
		     		     PERFORM 0045-START-NEW THRU
					0045-EXIT
				ELSE MOVE 'KEYED' TO ERR-USER-MSG
	     			     PERFORM 9999-ERROR THRU 9999-EXIT
	ELSE
	IF RFSH-KEY
		THEN PERFORM 0025-REFRESH-SCREEN THRU 0025-EXIT
	ELSE
	IF SCTP-KEY
		THEN MOVE 1 TO FLD-NO
	ELSE
	IF EXIT-KEY
		THEN MOVE '1' TO FINISHED-SW
	ELSE IF FLD-NO > 1
		THEN SUBTRACT 1 FROM FLD-NO
		ELSE MOVE 1 TO FLD-NO.
0020-EXIT. EXIT.

0025-REFRESH-SCREEN.
	IF FLD-NO > 1
		THEN SUBTRACT 1 FROM FLD-NO
		ELSE MOVE 1 TO FLD-NO.
	DISPLAY SCR-INITIAL.
	DISPLAY SCR-BANNER.
	DISPLAY SCR-PROMPT.
	DISPLAY SCR-ACCEPT.
0025-EXIT. EXIT.

0030-ACCEPT.
	IF CHANGE-ACTION
	  THEN MOVE ' ' TO GOOD-ANS-SW
	       PERFORM 0040-ANYCHANGE THRU 0040-EXIT UNTIL GOOD-ANS
	       IF GLOBAL-FUNCTION
			THEN GO TO 0030-EXIT
	       ELSE
	       IF CA-ACTION
			THEN NEXT SENTENCE
	       ELSE
	       IF UPDATE-ACTION
		   THEN IF UPDATE-ALLOWED
				THEN MOVE ZERO TO FKEY
				     MOVE FLD-CNT TO FLD-NO
                                     GO TO 0030-EXIT
				ELSE MOVE 'NO NEED TO UPDATE, NO CHANGE
-					    ' ACTION DONE' TO MESS
				     MOVE 'C' TO ACTION-SW
				     DISPLAY SCR-MESS
				     ACCEPT SCR-MESS TIME-OUT AFTER
					WS-WAIT
				     MOVE HIGH-FUNCTION-KEY TO FKEY
			    	     GO TO 0030-EXIT
	       ELSE
	       IF DELETE-ACTION
		   THEN MOVE HIGH-FUNCTION-KEY TO FKEY
		        PERFORM 0045-START-NEW THRU 0045-EXIT
		        GO TO 0030-EXIT.
%
^MACRO
GOTO &NOFIELDS&
~SET VR1 1
	GO TO
~FLDS
~IF VR1 GT &NOFIELDS& ~LEAVE
			FLD&VR1&
~ADD VR1 1
~GO ~FLDS
~LEAVE
	                     DEPENDING ON FLD-NO.
	MOVE 'GO TO DEPENDING LOGIC ERROR' TO MESS
	DISPLAY SCR-MESS.
	GO TO 0030-EXIT.
%
^MACRO
ACCEPT &NOFLDS& &KEYEND&
~SET VR0 1
~LOOP
~IF VR0 GT &NOFLDS& ~EGRESS
 FLD&VR0&.
	ACCEPT SCR-FLD&VR0& ON ESCAPE PERFORM 0035-ESCAPE THRU 0035-EXIT
				  GO TO 0030-EXIT.
	MOVE ZERO TO FKEY.
~IF VR0 NE &KEYEND& ~LOOPJ
	MOVE '1' TO LOCKED-SW.
	PERFORM 0800-READ-KEYED THRU 0800-EXIT UNTIL NOT LOCKED
	IF FILE-STATUS = I-O-OK
		THEN MOVE 'C' TO ACTION-SW
		     DISPLAY SCR-ACCEPT
	ELSE
	IF FILE-STATUS = RECORD-LOCKED
		THEN MOVE HIGH-FUNCTION-KEY TO FKEY
		     PERFORM 0045-START-NEW THRU 0045-EXIT
	ELSE
	IF FILE-STATUS = RECORD-NOT-FOUND
		THEN MOVE 'A' TO ACTION-SW
		     MOVE 'RECORD NOT FOUND, IT WILL BE ADDED.' TO
			MESS
		     DISPLAY SCR-MESS
	ELSE MOVE 'KEYED' TO ERR-USER-MSG
	     PERFORM 9999-ERROR THRU 9999-EXIT.
~LOOPJ
	DISPLAY SCR-FLD&VR0&.
	GO TO 0030-EXIT.
~ADD VR0 1
~GO ~LOOP
~EGRESS
%
^MACRO
CALLACCEPT &NUMBEROFFLDS& &LASTKEYFLD&
^GOTO &NUMBEROFFLDS&
^ACCEPT &NUMBEROFFLDS& &LASTKEYFLD&
%
^MACRO
PROCEDURE2 &FNAME&
0030-EXIT. EXIT.

0035-ESCAPE.
	ACCEPT FKEY FROM ESCAPE KEY.
	IF BACKTAB
	   THEN IF ADD-ACTION OR CA-ACTION
	   	   THEN IF FLD-NO > 1
				THEN SUBTRACT 2 FROM FLD-NO
				ELSE PERFORM 0045-START-NEW THRU
					0045-EXIT
				     SUBTRACT 1 FROM FLD-NO
		   ELSE SUBTRACT 1 FROM FLD-NO.
0035-EXIT. EXIT.

0040-ANYCHANGE.
	MOVE 'CA'    TO WORKDUMMY.
****
* ASSUME GOOD ANSWER
****
	MOVE '1' TO GOOD-ANS-SW.
	DISPLAY SCR-ANYCHANGE.
	ACCEPT SCR-ANYCHANGE
		ON ESCAPE MOVE HIGH-FUNCTION-KEY  TO FKEY
			  MOVE 'NOTHING DONE' TO MESS
			  UNLOCK &FNAME&
			  DISPLAY SCR-MESS
		     	  PERFORM 0045-START-NEW THRU 0045-EXIT
			  GO TO 0040-EXIT.
	ACCEPT FKEY FROM ESCAPE KEY.
	IF FIRST-DIGIT-NUMERIC THEN
	   IF NOT SECOND-DIGIT-NUMERIC
		THEN MOVE WK-DUM1 TO WK-DUM2
		     MOVE ' ' TO WK-DUM1.
	IF WORKDUMMY = 'U' OR 'u' OR ' U' OR ' u' OR 'UA' OR 'ua'
		THEN MOVE 'U' TO ACTION-SW
		     GO TO 0040-EXIT.
	IF WORKDUMMY = 'CA' OR 'ca'
		THEN MOVE FIRST-NON-KEY-FLD TO FLD-NO
		     MOVE 'CA'  TO ACTION-SW
		     MOVE '1' TO UPDATE-ALLOWED-SW
		     GO TO 0040-EXIT.
	IF WORKDUMMY = 'D ' OR ' D' OR 'd ' OR ' d' OR 'da' OR 'DA'
		THEN MOVE '1' TO LOCKED-SW
		     PERFORM 0060-DELETE THRU 0060-EXIT UNTIL NOT
			LOCKED
		     IF FILE-STATUS = I-O-OK
			THEN MOVE 'RECORD WAS SUCCESSFULLY DELETED.'
				TO MESS
			     DISPLAY SCR-MESS
			     PERFORM 0045-START-NEW THRU 0045-EXIT
			ELSE MOVE 'DELETE' TO ERR-USER-MSG
			     PERFORM 9999-ERROR THRU 9999-EXIT
	ELSE
	INSPECT WORKDUMMY REPLACING ALL ' ' BY '0'
	IF WORKDUMMY NOT NUMERIC
		THEN MOVE 'INVALID ENTRY.' TO MESS
		     MOVE ' ' TO GOOD-ANS-SW
		     DISPLAY SCR-MESS
		     ACCEPT SCR-MESS TIME-OUT AFTER WS-WAIT
	ELSE MOVE WORKDUMMY9  TO FLD-NO
	     MOVE 'C' TO ACTION-SW
	     IF FLD-NO > 0 AND
		(FLD-NO < FLD-CNT OR FLD-NO = FLD-CNT)
		THEN IF KEY-FIELD
			THEN MOVE 'CHANGE NOT ALLOWED ON KEY' TO
				MESS
			     MOVE ' ' TO GOOD-ANS-SW
			     ADD 1 TO FLD-NO
			     DISPLAY SCR-MESS
			     ACCEPT SCR-MESS TIME-OUT AFTER WS-WAIT
			ELSE MOVE '1' TO UPDATE-ALLOWED-SW
		ELSE MOVE 'CHANGE FIELD DOES NOT EXIST' TO MESS
		     MOVE ' ' TO GOOD-ANS-SW
	   	     DISPLAY SCR-MESS
		     ACCEPT SCR-MESS TIME-OUT AFTER WS-WAIT.
0040-EXIT. EXIT.

0045-START-NEW.
	MOVE 1 TO FLD-NO.
	MOVE 'A' TO ACTION-SW.	
	MOVE ' ' TO UPDATE-ALLOWED-SW
	PERFORM 0047-CLEAR-FLDS THRU 0047-EXIT.
	DISPLAY SCR-ACCEPT.
0045-EXIT. EXIT.

0047-CLEAR-FLDS.
%
^MACRO
CLEARF &TYPE& &FLD&
~SET VR0 &TYPE&
~IF VR0 EQ 2 ~TWO
~IF VR0 EQ 1 ~ONE
~TWO
	MOVE SPACES TO &FLD&.
~GO ~OUT
~ONE
	MOVE ZEROES TO &FLD&.
~OUT
%

^MACRO
END &FILE& &FDRECORD& &WSRECORD& &KEY&
0047-EXIT. EXIT.

0050-UPDATE-RECORD.
	IF ADD-ACTION
	    THEN WRITE &FDRECORD& FIX POSITION STATIC FROM &WSRECORD&
			KEY IS &KEY&
		 IF FILE-STATUS = I-O-OK
		   THEN MOVE 'RECORD WAS SUCCESSFULLY UPDATED.'
			TO MESS
		     MOVE ' ' TO LOCKED-SW
		     DISPLAY SCR-MESS
	           ELSE MOVE 'WRITE' TO ERR-USER-MSG
	                PERFORM 9999-ERROR THRU 9999-EXIT
	   ELSE MOVE '1' TO LOCKED-SW
		PERFORM 0802-CHECK-UPDATE THRU 0802-EXIT UNTIL NOT
			LOCKED
		IF UPOK
		    REWRITE &FDRECORD& STATIC UNLOCK FROM &WSRECORD&
		    IF FILE-STATUS = I-O-OK
		       THEN MOVE 'RECORD WAS SUCCESSFULLY UPDATED.'
			    TO MESS
		            MOVE ' ' TO LOCKED-SW
		            DISPLAY SCR-MESS
	               ELSE MOVE 'REWRITE' TO ERR-USER-MSG
	     	            PERFORM 9999-ERROR THRU 9999-EXIT
		ELSE MOVE 'UPDATE CONFLICT....RECORD NOT CHANGED**'
		       TO MESS
		     DISPLAY SCR-MESS.
0050-EXIT. EXIT.

0060-DELETE.
	DELETE &FILE& STATIC.
	IF FILE-STATUS = I-O-OK
		THEN MOVE ' ' TO LOCKED-SW
	ELSE
	IF DELETE-CONFLICT
		THEN MOVE 'DELETE CONFLICT' TO MESS
		     DISPLAY SCR-MESS
		     CALL PROGRAM '#W'
	ELSE MOVE 'DELETE' TO ERR-USER-MSG
	     PERFORM 9999-ERROR THRU 9999-EXIT.
0060-EXIT. EXIT.

0600-START-NEXT.
	 IF &KEY& NOT = MYRECKEY-HOLD
		THEN MOVE '1' TO LOCKED-SW
		     PERFORM 0610-APPROX THRU 0610-EXIT UNTIL NOT
			LOCKED
		     IF FILE-STATUS = I-O-OK
			THEN DISPLAY SCR-ACCEPT
			     MOVE '1' TO FOUND-SW
			ELSE
		     IF FILE-STATUS = RECORD-LOCKED
			THEN MOVE 'REQUEST WAS NOT COMPLETED' TO MESS
			     DISPLAY SCR-MESS
			ELSE
		     IF FILE-STATUS = RECORD-NOT-FOUND OR AT-END
			THEN MOVE 'NO RECORD FOUND' TO MESS
			      DISPLAY SCR-MESS
			ELSE MOVE 'APPROXIMATE' TO ERR-USER-MSG
	     		     PERFORM 9999-ERROR THRU 9999-EXIT
	ELSE
		MOVE '1' TO LOCKED-SW
		PERFORM 0810-NEXT THRU 0810-EXIT UNTIL NOT LOCKED
		IF FILE-STATUS = I-O-OK
			THEN DISPLAY SCR-ACCEPT
			     MOVE '1' TO FOUND-SW
		ELSE
		IF FILE-STATUS = RECORD-LOCKED
			THEN MOVE 'REQUEST WAS NOT COMPLETED' TO MESS
			     DISPLAY SCR-MESS
		ELSE
		IF FILE-STATUS = AT-END
			THEN MOVE 'NO MORE RECORDS EXIST' TO MESS
			     DISPLAY SCR-MESS
		ELSE MOVE 'NEXT' TO ERR-USER-MSG
		     PERFORM 9999-ERROR THRU 9999-EXIT.
0600-EXIT. EXIT.

0610-APPROX.
	READ &FILE& FIX POSITION STATIC INTO &WSRECORD&
		KEY IS &KEY&  APPROXIMATE.
	IF FILE-STATUS = I-O-OK
		THEN MOVE ' ' TO LOCKED-SW
		     MOVE &KEY&  TO MYRECKEY-HOLD
	ELSE
	IF FILE-STATUS = RECORD-NOT-FOUND
		THEN MOVE ' ' TO LOCKED-SW
	ELSE
	IF FILE-STATUS = RECORD-LOCKED
		THEN MOVE 'RECORD IN USE..WILL YOU WAIT?' TO MESS
		     MOVE 'Y' TO WS-DUMMY
		     DISPLAY SCR-MESS
		     ACCEPT SCR-MESS
		     IF WS-DUMMY = 'Y' THEN
		     	CALL PROGRAM '#W'
		     ELSE MOVE ' ' TO LOCKED-SW
	ELSE MOVE 'KEYED' TO ERR-USER-MSG
	     PERFORM 9999-ERROR THRU 9999-EXIT.
0610-EXIT. EXIT.

0800-READ-KEYED.
******
*INSTEAD OF LOCKING THE RECORD DURING MODIFICATION, A COPY IS
*SAVED TO CHECKMOD1.  AFTER UPDATING THE COPY IN WORKING STORAGE
*A NEW READ IS DONE TO DETERMINE IF THE FILE COPY HAS CHANGED, IF
*NOT ALLOW THE UPDATE OTHERWISE ITS AN UPDATE CONFLICT.  THAT SECOND
*READ CONTAINS THE LOCK SO WE MINIMIZE THE TIME THE RECORD IS LOCKED
*******

	READ &FILE& FIX POSITION STATIC INTO &WSRECORD&
		KEY IS &KEY&.
	IF FILE-STATUS = I-O-OK
		THEN MOVE ' ' TO LOCKED-SW
		     MOVE &KEY& TO MYRECKEY-HOLD
		     MOVE &WSRECORD& TO CHECKMOD1
	ELSE
	IF FILE-STATUS = RECORD-NOT-FOUND
		THEN MOVE ' ' TO LOCKED-SW
	ELSE
	IF FILE-STATUS = RECORD-LOCKED
		THEN MOVE 'RECORD IN USE..WILL YOU WAIT?' TO MESS
		     MOVE 'Y' TO WS-DUMMY
		     DISPLAY SCR-MESS
		     ACCEPT SCR-MESS
		     IF WS-DUMMY = 'Y' THEN
		     	CALL PROGRAM '#W'
		     ELSE MOVE ' ' TO LOCKED-SW
	ELSE MOVE 'KEYED' TO ERR-

	     PERFORM 9999-ERROR THRU 9999-EXIT.
0800-EXIT. EXIT.

0802-CHECK-UPDATE.
	MOVE  ' ' TO UPOK-SW.
	READ &FILE& FIX POSITION STATIC LOCK INTO CHECKMOD2
		KEY IS &KEY&.
	IF FILE-STATUS = I-O-OK
		THEN MOVE ' ' TO LOCKED-SW
		     IF CHECKMOD2 = CHECKMOD1
		         MOVE '1' TO UPOK-SW
		     ELSE NEXT SENTENCE
	ELSE
	IF FILE-STATUS = RECORD-LOCKED
		THEN MOVE 'RECORD IN USE..WILL YOU WAIT?' TO MESS
		     MOVE 'Y' TO WS-DUMMY
		     DISPLAY SCR-MESS
		     ACCEPT SCR-MESS
		     IF WS-DUMMY = 'Y' THEN
		     	CALL PROGRAM '#W'
		     ELSE MOVE ' ' TO LOCKED-SW
	ELSE MOVE ' ' TO LOCKED-SW.
0802-EXIT. EXIT.

0810-NEXT.
	IF FIND-KEY
		THEN READ &FILE& FIX POSITION NEXT INTO &WSRECORD&
	ELSE READ &FILE& FIX POSITION BACKWARD INTO &WSRECORD&.
	IF FILE-STATUS = I-O-OK OR AT-END
		THEN MOVE ' ' TO LOCKED-SW
		     MOVE &KEY& TO MYRECKEY-HOLD
	ELSE
	IF FILE-STATUS = RECORD-LOCKED
		THEN MOVE 'RECORD IN USE..WILL YOU WAIT?' TO MESS
		     MOVE 'Y' TO WS-DUMMY
		     DISPLAY SCR-MESS
		     ACCEPT SCR-MESS
		     IF WS-DUMMY = 'Y' THEN
		     	CALL PROGRAM '#W'
		     ELSE MOVE ' ' TO LOCKED-SW
	ELSE MOVE 'NEXT ' TO ERR-USER-MSG
	     PERFORM 9999-ERROR THRU 9999-EXIT.
0810-EXIT. EXIT.

COPY 'CBERROR32.PL'.

*******************
*  THE END
%
^MACRO
BEGIN &PROGRAM& &AUTHOR& &FILENAME& &KEYPIC& &RECLEN& &KEYFLDS& &NONKEY& &SCREENDESC&
^IDENT &PROGRAM& &AUTHOR& &FILENAME&
^WS1 &KEYPIC& &PROGRAM& &NONKEY& &KEYFLDS&
^WS2 &FILENAME& &RECLEN&
^SCREEN "&SCREENDESC&"
%
^MACRO
LOGIC &FILENAME& &SELECTPATH& &SELECTKEY& &NUMOFFLDS& &LSTKEY&
^DECLARE &FILENAME& &SELECTPATH& &NUMOFFLDS&
^PROCEDURE1
^CALLACCEPT &NUMOFFLDS& &LSTKEY&
^PROCEDURE2 &FILENAME&
%
