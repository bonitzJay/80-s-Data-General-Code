.TITLE RW1
        .ENT OPN1,CLS1,WRT1,REA1


	AC0=0
	AC1=1
	AC2=2
	AC3=3

	FPAC0=0
	FPAC1=1
	FPAC2=2
	FPAC3=3


        .NREL   1
 ; SUBPROGRAMS  STARTS HERE
	
; PARAMETER TABLE

.OCON =  -12.                   ; BECOMES BYTE ADDRESS OF FILENAME
.OCONL = 200.                    ; 200 BYTES LONG

.MSGN = -14.			;BECOMES BYTE ADDRESS OF MESSAGE BUFF
.MSGL = 80.			;80 BYTES LONG


OPN1:   	WSAVS   0
	LWLDA	AC3,.OCON,AC3	;GET BYTE ADDRESS TO CON FROM COBOL
	LLEF	AC0,TRAN	;TRANSLATE TABLE ADDRESS
	LLEFB	AC2,FNAME*2	;MY FILENAME BUFFER
	WLDAI	.OCONL,AC1	;LENGTH OF MOVE
	WCMT			;MOVE DELIMITED BY A SPACE OR NULL
	WSUB	AC0,AC0		;MAKE A NULL
	WSTB	AC2,AC0		;STUFF IT AWAY

	LDAFP	AC3		;RESTORE FRAME POINTER
;BLANK OUT ERROR
	WLDAI	" ,AC1		;GET A BLANK
	LWLDA	AC3,.MSGN,AC3	;GET BYTE ADDRESS OF MSG
	WSTB	AC3,AC1		;PUT IN FIRST ' '
	WMOV	AC3,AC2		;LOAD DESTINATION AC
	WINC	AC2,AC2		;NEXT BYTE
	WLDAI	.MSGL,AC0	;LENGTH OF MOVE
	WMOV	AC0,AC1		;LENGTH OF MOVE
	WCMV			;BLANK OUT

;INIT PACKET EACH TIME FOR SAFETY

	LLEF	AC3,IOPAC	;IO PACKET
	LLEF	AC2,CLEAR	;INITIAL PACKET
	WLDAI	?IBLT,AC1	;LENGTH
	WBLM			;MOVEIT

	?OPEN	IOPAC
	WBR	OERBR
	LDAFP	AC3		;RESTORE FRAME POINTER
	WRTN			;GO BACK
	
MASK:	.DWORD	80.*400+377	;THIS WILL GET ERROR FROM SYSTEM
FPBUFF:	.BLK	18.		;FLOATING POINT SAVE AREA
OERBR:	LDAFP	AC3		;RESTORE FRAME POINTER
	XWLDA	AC1,MASK	;GET MASK WITH CHANNEL
	LWLDA	AC2,.MSGN,AC3	;BYTE POINTER TO MSG
	?ERMSG
	WBR	OERBR
	WRTN
	.EJEC

;THIS SUBROUTINE WILL WRITE TO THE COMMUNICATIONS PORT
; PARAMETER TABLE

.WBFN = -12.                    ;BECOMES BYTE ADDRESS OF BUFFER
.WBFL = 139.                    ;MAX BUFFER = 139

.WBTN =  -14.                    ; BECOMES BYTE ADDRESS OF BYTES MAX
.WBTL = 6B10+3                  ; PIC S9(9) COMP

.WERN = -16.			;BYTE POINTER TO ERRWRD
.WERL = 6B10+3			;PIC S9(9) COMP


WRT1:   WSAVS	0		;SAVE ALL
;GET BYTES TO WRITE MAX
	LWLDA	AC2,.WBTN,AC3	;GET BYTE ADDR
	WLSHI	-1,AC2		;WORD ADDRESS
	LWLDA	AC2,0,AC2	;GET BYTES TO WRITE
;PUT IN WRITE PACKET
	LNSTA	AC2,IOPAC+?IRCL	;PUT IN PACK

	WMOV	AC2,AC1		;USE AC1 AS COUNTER FOR LOOP
;GET BUFFER BYTE ADDR
	LWLDA	AC2,.WBFN,AC3	;BYTE POINTER TO BUFFER
;PUT IN PACKET
	LWSTA	AC2,IOPAC+?IBAD
;GENERATE EVEN PARITY
	WMOV	AC2,AC3		;AC3 POINTS TO BUFFER
WRLP:
	WSUB	AC0,AC0		;NEED ZERO
	WSEQ	AC1,AC1		;IS IT FINISHED
	WBR	WCON		;NO CONTINUE
	WBR	WRALL		;YES STOP
WCON:
	WLDB	AC3,AC2		;GET A CHAR
	WCOB	AC2,AC0		;COUNT THE BITS
	WSNEI	1,AC0		;ONE
	WBR	ADDP		;YES ADD PARITY
	WSNEI	3,AC0		;THREE
	WBR	ADDP		;YES ADD PARITY
	WSNEI	5,AC0		;FIVE
	WBR	ADDP		;YES ADD PARITY
	WSNEI	7,AC0		;SEVEN
	WBR	ADDP		;YES ADD PARITY
	WBR	NPAR
ADDP:	WIORI	200,AC2
NPAR:	WSTB	AC3,AC2		;PUT IT BACK
	WINC	AC3,AC3		;POINT TO NEXT
	WSBI	1,AC1		;REDUCE COUNTER
	WBR	WRLP
WRALL:
;WRITE BUFFER
	?WRITE  IOPAC
	WBR	WERBR
	WSUB 	AC0,AC0
	LWLDA	AC2,.WERN,AC3	;GET BYTE POINTER TO ERROR
	WLSHI	-1,AC2		;WORD POINTER
	LWSTA	AC0,0,AC2	;SET NO ERROR
	WRTN
WERBR:	
	LWLDA	AC2,.WERN,AC3	;GET BYTE POINTER TO ERROR
	WLSHI	-1,AC2		;WORD POINTER
	LWSTA	AC0,0,AC2	;SET NO ERROR
	WRTN

;THIS SUBROUTINE WILL READ THE COMMUNICATIONS PORT
; PARAMETER TABLE

.RBFN = -12.                    ;BECOMES BYTE ADDRESS OF BUFFER
.RBFL = 139.                    ;MAX BUFFER = 139

.RBTN =  -14.                    ; BECOMES BYTE ADDRESS OF BYTES MAX READ
.RBTL = 6B10+3                  ; PIC S9(9) COMP

.RPFLG = -16.			;BP TO FILE POSITION FLAG
.ROFF  = -18.			;BP TO BYTES OFFSET

.RERN = -20.			;BYTE POINTER TO ERRWRD
.RERL = 6B10+3			;PIC S9(9) COMP


REA1:   WSAVS	0		;SAVE ALL
	LWLDA	AC2,.RBTN,AC3	;GET BYTE ADDR
	WLSHI	-1,AC2		;WORD ADDRESS
	LWLDA	AC2,0,AC2	;GET BYTES TO READ
;PUT IN READ  PACKET
	LNSTA	AC2,IOPAC+?IRCL	;PUT IN PACKET
	LWLDA	AC2,.RBFN,AC3	;BYTE POINTER TO BUFFER
;PUT IN PACKET
	LWSTA	AC2,IOPAC+?IBAD
;READ BUFFER
	LWLDA	AC2,.RPFLG,AC3	;GET READ FLAG
	WLSHI	-1,AC2		;ADDRESS
	LWLDA	AC2,0,AC2	;GET VALUE OF FLAG
	WSEQ	AC2,AC2		;IS IT ZERO
	WBR	AONE		;IT WAS NON ZERO
	LNLDA	AC2,IOPAC+?ISTI	;GET SPECIFICATIONS
	WLDAI	?IPST,AC1	;GET OFFSET TO BIT
	WCOM	AC1,AC1		; COMPLEMENT
	WAND	AC2,AC1		;TURN OFF
	LNSTA	AC1,IOPA

	WBR	OVERSET
AONE:
	LNLDA	AC1,IOPAC+?ISTI ;GET FILE SPECS
	WIORI	?IPST,AC1	;TURN ON BIT
	LNSTA	AC1,IOPAC+?ISTI ;PUT IT BACK
OVERSET:
	LWLDA	AC2,.ROFF,AC3	;GET OFFSET
	WLSHI	-1,AC2		;ADDRESS
	LWLDA	AC2,0,AC2	;GET VALUE
	LWSTA	AC2,IOPAC+?IRNH	;PUT PACKET
	
	?READ   IOPAC
	WBR	RERBR
	LNLDA	AC2,IOPAC+?IRLR ;GET BYTES READ
	LWLDA	AC3,.RBTN,AC3	;GET ADDRESS OF RETURN BYTES
	WLSHI	-1,AC3		;WORD ADDRESS
	LWSTA	AC2,0,AC3	;TUCK AWAY
  	LDAFP	AC3		;RESTORE FRAME POINTER
	WSUB 	AC0,AC0
	LWLDA	AC2,.RERN,AC3	;GET BYTE POINTER TO ERROR
	WLSHI	-1,AC2		;WORD POINTER
	LWSTA	AC0,0,AC2	;SET NO ERROR
	WRTN
RERBR:	
	LNLDA	AC2,IOPAC+?IRLR ;GET BYTES READ
	LWLDA	AC3,.RBTN,AC3	;GET ADDRESS OF RETURN BYTES
	WLSHI	-1,AC3		;WORD ADDRESS
	LWSTA	AC2,0,AC3	;TUCK AWAY
	LDAFP	AC3
	LWLDA	AC2,.RERN,AC3	;GET BYTE POINTER TO ERROR
	WLSHI	-1,AC2		;WORD POINTER
	LWSTA	AC0,0,AC2	;SET NO ERROR
	WRTN
;THIS SUBROUTINE WILL CLOSE THE COMMUNICATIONS  PORT

CLS1:   	WSAVS   0
	?CLOSE	IOPAC
	WBR	CERBR
	LDAFP	AC3		;RESTORE FRAME POINTER
	WRTN			;GO BACK
	
CERBR:	LJMP	ERROR	        ;A BRIDGE OVER TROUBLED WATERS
; Error handler.

ERROR:	WLDAI 	?RFEC+?RFCF+?RFER,  2  ; Err flgs.
	?RETURN			; To CLI.
	WBR	ERROR		; Rtn error.


	.NREL

	.ENABLE	WORD  ; Most pkt items =16 bits.
MYIUFL:	0
MPTABA:	.DWORD	0
MYCON:	.BLK	16.
SCHN:	.DWORD	0
THECHAR: .WORD  0
	 .WORD  0
	 .WORD  0
TRAN:
T00:    1B0
T02:    0
T04:    1B0
T08:    0
T10:    0
T12:    0
T14:    0
T16:    0
T18:    0
T20:    0
T22:    0
T24:    0
T26:    0
T28:    0
T30:	0

CLEAR:	.BLK	?IBLT	; Packet length.
	.LOC 	CLEAR+?ICH	;CHANNEL NUMBER RETURNED BY SYSTEM
	0
	.LOC	CLEAR+?ISTI	;OPEN OPTIONS
				;?IBIN+ BINARY IO
	?ICRF+?RTDS+?OFIO+?PDEL	;DATA SENS IO PRIORITY READ
	.LOC	CLEAR+?ISTO	;FILE TYPE
	0
	.LOC	CLEAR+?IMRS 	;BLOCK SIZE
	 -1			; MEM. BLOCK SIZE DEFAULT TO 2048.
	.LOC	CLEAR+?IBAD  	;BYTE POINTER TO I/O BUFFER
	.DWORD  BUFFER1*2	; BUFFER
	.LOC	CLEAR+?IRES	;DENSITY MODE
	0
	.LOC	CLEAR+?IRCL	;RECORD LENGTH
	0        	   	; REC LEN IS BUFLENGTH.
	.LOC	CLEAR+?IRLR	;NUMBER OF BYTES TRANSFE

	0			; SYS RTNS BYTES TRANSFERRED.
	.LOC	CLEAR+?IRNW	;RESERVED
	0			;SET TO ZERO
	.LOC	CLEAR+?IRNH	;RECORD NUMBER
	.DWORD	0
	.LOC	CLEAR+?IFNP	;BYTE POINTER TO FILENAME
	.DWORD 	FNAME*2
	.LOC	CLEAR+?IDEL	;ADDRESS OF DELIMITER TABLE
        .DWORD  -1
	.LOC	CLEAR+?IBLT	; PACKET LENGTH.
	 ; END OF INIT IO PACKET
	

; THIS IS THE PACKET TO BE USED CLEAR WILL BE USED TO RE INIT THE PACK
; ON EACH OPEN.
IOPAC:	.BLK	?IBLT
	.LOC	IOPAC+?IBLT
	;END OF IO PACKET

BUFFER1: .BLK	70.		;MAX CAN BE 139 CHARS

FNAME: .BLK  (?MXPL+1)/2  ; Filename  buffer; sys
			  ; limit for # of chars.
	.END
