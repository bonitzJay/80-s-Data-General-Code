IDENTIFICATION DIVISION.
PROGRAM-ID. JCSCOMMENTC.
AUTHOR. ANDERSON.
*********************************************************************
*    SECURITY.  THIS PROGRAM IS PROPRIETORY TO ATLANTIC SOFT DRINK
*          CO. AND IS NOT TO BE REPRODUCED, USED OR DISCLOSED WITHOUT
*          PERMISSION OF:
*
*               ATLANTIC SOFT DRINK CO.
*               6925 NORTH MAIN STREET
*               COLUMBIA,      S . C .
*********************************************************************
* JCS COMMENT CHECK --- REPORT THE COMMENT BLOCKS FROM PROGRAM-ID
*   THROUGH INPUT-OUTPUT SECTION.. THIS PROVIDES (IF THE PROGRAM
*   FOLLOWS THE RULES) A QUICK CHECK OF WHAT A PROGRAM WAS DESIGNED
*   TO DO.
*********************************************************************
DATE-WRITTEN.   04/21/87.
ENVIRONMENT DIVISION.
CONFIGURATION SECTION.
SOURCE-COMPUTER. MV-8000.
OBJECT-COMPUTER. MV-8000.
INPUT-OUTPUT SECTION.
FILE-CONTROL.
SELECT POUT ASSIGN TO '@LIST'
	ORGANIZATION SEQUENTIAL
	STATUS FILESTATUS.


DATA DIVISION.
FILE SECTION.
FD POUT
	BLOCK CONTAINS 512 CHARACTERS
	RECORDING MODE IS DATA-SENSITIVE
	LABEL RECORDS ARE OMITTED.
01 OUTREC		PIC X(132).

WORKING-STORAGE SECTION.
77  WRITEON-SW		PIC X.
	88  WRITEON	VALUE '1'.
77  LINE-CNT		PIC 9(4) COMP.
77  PAGE-CNT		PIC 9(4) COMP.
77  TAB-CNT		PIC 9(4) COMP.
01  D-DUM	PIC X.
01  CTEMP	PIC X(64).
01 CDIR		PIC X(128) VALUE '='.
01 RBUF	PIC X(64).
01  READFLAG1			PIC S9(9) COMP.
01  READOFFSET1			PIC S9(9) COMP.
01  SAVEBYTES1			PIC S9(9) COMP.
01  I				PIC S9(9) COMP.
01  J				PIC S9(9) COMP.
01  BYTESREAD1 			PIC S9(9) COMP.
01  RETURNVAR			PIC S9(9) COMP.

01  EOF1-SW		PIC X.
	88  EOF1	VALUE '1'.
01  SECOND-EOF1-SW	PIC X.
	88  SECOND-EOF1	VALUE '1'.
01  CLINEFEEDS1		PIC S9(9) COMP.
01  CFORMFEEDS1		PIC S9(9) COMP.
01  CLINEFEEDS		PIC S9(9) COMP.
77  LINENO		PIC 9(9) COMP.
*****CALL VARS
01  CALLFILENAME		PIC X(32).
01  CALLVER			PIC S9(9) COMP.
01  CALL-BUFFER.
	05  RECLN		PIC 9(4) COMP.
	05  CALLLINE		PIC X(254).
01  TOFROM			PIC XXXXX.
*****
01  GMES		PIC S9(4) COMP VALUE 0.
01  GCMD		PIC S9(4) COMP VALUE 1.
01  GCNT		PIC S9(4) COMP VALUE 2.
01  GARG		PIC S9(4) COMP VALUE 3.
01  GTSW		PIC S9(4) COMP VALUE 4.
01  GSWS		PIC S9(4) COMP VALUE 5.
01  G-AC0		PIC S9(9) COMP VALUE ZERO.
01  G-AC1		PIC S9(9) COMP VALUE ZERO.
01  G-ARGUMENT-NO	PIC S9(4) COMP VALUE ZERO.
01  G-SWITCH		PIC X(32) VALUE SPACES.
01  G-BUFFER		PIC X(200) VALUE SPACES.
01  G-ERRWRD		PIC S9(9) COMP VALUE ZERO.
* CALL 'GETME' USING REQUEST G-AC0 G-AC1 G-ARGUMENT-NO G-SWITCH
*                    G-BUFFER G-ERRWRD
01  GETME-ERRORS.
	05  NO-ARG		PIC S9(9) COMP VALUE 228.
01  THROWPAGE.
	05  FILLER		PIC S99 COMP VALUE 12.
01  START-HEAD.
	05  FILLER		PIC X(79) VALUE ALL '='.
	05  FILLER		PIC S99 COMP VALUE 10.
01  PGMLINE.
	05  FILLER		PIC X(20) VALUE '==========>'.
	05  PGMOUT		PIC X(32).
	05  NEW-LINECHAR1	PIC S99 COMP VALUE 10.
	05  NEW-LINECHAR REDEFINES NEW-LINECHAR1 PIC X.
01  MYDATE.
	05  TO-DAY	PIC 9(6).
	05  FILLER	PIC 99.
01  FILESTATUS 		PIC XX.
01  WORK-BUFF		PIC X(256).
01  ERRWRD		PIC 9(9) COMP.
01 ERR-MSG.
	05  ERR-MSG3	PIC XXX.
	05  FILLER	PIC X(77).
01  TOK-TAB.
	05  TOKEN OCCURS 1 TO 256 DEPENDING ON TOK-CNT
		INDEXED BY NDX PIC X(32).
01  C-CON-SW		PIC X.
01  TOK-CNT		PIC 9(9) COMP VALUE ZERO.
01  FINISHED-SW		PIC X.
	88  FINISHED	VALUE '1'.
01  EOF-SW		PIC X.
	88 EOF		VALUE '1'.
01  ALL-GONE-SW		PIC X.
	88  ALL-GONE	VALUE '1'.
01  WS-DATE.
	05  WS-YY	PIC 99.
	05  WS-MM	PIC 99.
	05  WS-DD	PIC 99.
01 WS-

	05  WS-HR	PIC 99.
	05  WS-MIN	PIC 99.
	05  WS-SEC	PIC 99.
	05  FILLER	PIC 99.
COPY 'WHO32.WS'.
PROCEDURE DIVISION.
	COPY 'WHO.CALL'.
	ACCEPT MYDATE FROM DATE.
	MOVE ' ' TO FINISHED-SW.
	MOVE 1 TO G-ARGUMENT-NO.
	EXPUNGE POUT.
	OPEN OUTPUT POUT.
        PERFORM   0005-DO THRU 0005-EXIT
	STOP RUN.

0005-DO.
	MOVE 1 TO G-ARGUMENT-NO.
	CALL 'GET' USING GARG G-AC0 G-AC1 G-ARGUMENT-NO G-SWITCH
			   G-BUFFER G-ERRWRD.
	IF G-ERRWRD  = NO-ARG
		THEN
		     DISPLAY 'X PROGRAM TEMPLATE'
		     STOP RUN
	ELSE
	IF G-ERRWRD NOT = ZERO
		      DISPLAY 'GET '
		     CALL 'IRTN' USING G-ERRWRD.
	MOVE   G-BUF

	CALL 'GNFNO' USING CDIR CTEMP RBUF ERR-MSG.
	IF ERR-MSG3 NOT = SPACES
		THEN DISPLAY ERR-MSG
		     STOP RUN.
	MOVE ' ' TO FINISHED-SW.
	PERFORM 2-GET THRU 2-EXIT UNTIL FINISHED.
	CALL 'GNFNC' USING CDIR CTEMP RBUF ERR-MSG.
	IF ERR-MSG3 NOT = SPACES
		DISPLAY ERR-MSG STOP RUN.
0005-EXIT. EXIT.

2-GET.
	CALL 'GNFNR' USING CDIR CTEMP RBUF ERR-MSG
	IF ERR-MSG3 = 'EOF'
		THEN MOVE '1' TO FINISHED-SW
			GO TO 2-EXIT.
	IF ERR-MSG NOT = SPACES
		THEN DISPLAY ERR-MSG STOP RUN.
	PERFORM 0010-MAIN  THRU 0010-EXIT.
2-EXIT. EXIT.

0010-MAIN.
	MOVE ' ' TO WRITEON-SW.
	MOVE SPACES TO CALLFILENAME PGMOUT.
	STRING RBUF DELIMITED BY LOW-VALUE INTO CALLFILENAME.
	STRING CALLFILENAME DELIMITED BY '.JCS' INTO PGMOUT.
	WRITE OUTREC FROM THROWPAGE.
	WRITE OUTREC  FROM START-HEAD.
	WRITE OUTREC  FROM PGMLINE.
	WRITE OUTREC  FROM PGMLINE.
	WRITE OUTREC  FROM PGMLINE.
	WRITE OUTREC  FROM START-HEAD.
	WRITE OUTREC  FROM NEW-LINECHAR.
	MOVE 'OPEN' TO TOFROM.
	MOVE ZERO TO CALLVER.
	CALL 'INACCESS' USING CALLFILENAME CALLVER CALL-BUFFER TOFROM.
	IF TOFROM NOT = SPACES THEN
		DISPLAY 'BAD OPEN ' TOFROM ' ' CALLFILENAME
		GO TO 0010-EXIT.
	MOVE ' ' TO EOF-SW.
	MOVE ZERO TO LINENO.
	MOVE 0   TO RECLN.
	PERFORM REALREAD.
	PERFORM 0020-READ UNTIL EOF.
	MOVE 'CLOSE' TO TOFROM.
	CALL 'INACCESS' USING CALLFILENAME CALLVER CALL-BUFFER TOFROM.
0010-EXIT. EXIT.

0020-READ.
	IF WRITEON THEN
		WRITE OUTREC FROM CALLLINE.
 	CALL 'PRSE32' USING WORK-BUFF TOK-TAB TOK-CNT ERRWRD.
 	IF ERRWRD = ZERO
 		THEN IF TOK-CNT = ZERO
			THEN MOVE ZERO TO RECLN
			     PERFORM REALREAD
			ELSE
			PERFORM 0030-FIND THRU 0030-EXIT
			MOVE ZERO TO RECLN
			PERFORM REALREAD
 	ELSE PERFORM 9999-ERROR THRU 9999-EXIT.
0020-EXIT. EXIT.

REALREAD.
	MOVE 255 TO RECLN.
	CALL 'INACCESS' USING CALLFILENAME CALLVER CALL-BUFFER TOFROM.
	IF TOFROM = 'EOF' THEN
		MOVE '1' TO EOF-SW
	ELSE
		MOVE CALLLINE TO WORK-BUFF
		ADD 1 TO LINENO
		SUBTRACT 1 FROM RECLN.

0030-FIND.
	IF TOKEN (1) = 'PROGRAM-ID' OR 'PROGRAM-ID.'
		MOVE '1' TO WRITEON-SW
	ELSE
	IF TOKEN (1) = 'DATA' AND
	   (TOKEN (2) = 'DIVISION' OR TOKEN (2) = 'DIVISION.')
		        WRITE OUTREC FROM NEW-LINECHAR
		        WRITE OUTREC FROM NEW-LINECHAR
			MOVE '1' TO EOF-SW.
0030-EXIT. EXIT.


9999-ERROR.
	CALL 'ERMSG' USING ERRWRD ERR-MSG ERRWRD.
	DISPLAY ERR-MSG.
	CALL 'ABORT'.
9999-EXIT. EXIT.
